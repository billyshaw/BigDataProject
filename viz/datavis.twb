<?xml version='1.0' encoding='utf-8' ?>

<workbook source-platform='win' version='8.3' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <!-- build 8300.14.1117.2230                                -->
  <preferences>
  </preferences>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='8.3'>
      <aliases enabled='yes' />
      <column caption='1' datatype='real' name='[Parameter 1]' param-domain-type='any' role='measure' type='quantitative' value='1.0'>
        <calculation class='tableau' formula='1.0' />
      </column>
    </datasource>
    <datasource caption='new_trip_data_1_5' inline='true' name='textscan.41980.593389085647' version='8.3'>
      <connection class='textscan' directory='C:/Users/ELin/Desktop/BigData/BigDataProject/viz' filename='new_trip_data_1_5.csv'>
        <relation name='new_trip_data_1_5#csv' table='[new_trip_data_1_5#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='medallion' ordinal='0' />
            <column datatype='string' name='hack_license' ordinal='1' />
            <column datatype='string' name='vendor_id' ordinal='2' />
            <column datatype='integer' name='rate_code' ordinal='3' />
            <column datatype='string' name='store_and_fwd_flag' ordinal='4' />
            <column datatype='datetime' name='pickup_datetime' ordinal='5' />
            <column datatype='datetime' name='dropoff_datetime' ordinal='6' />
            <column datatype='integer' name='passenger_count' ordinal='7' />
            <column datatype='integer' name='trip_time_in_secs' ordinal='8' />
            <column datatype='real' name='trip_distance' ordinal='9' />
            <column datatype='real' name='pickup_longitude' ordinal='10' />
            <column datatype='real' name='pickup_latitude' ordinal='11' />
            <column datatype='real' name='dropoff_longitude' ordinal='12' />
            <column datatype='real' name='dropoff_latitude' ordinal='13' />
            <column datatype='integer' name='pickup_postcode' ordinal='14' />
            <column datatype='string' name='pickup_neighborhood' ordinal='15' />
            <column datatype='integer' name='pickup_hour' ordinal='16' />
            <column datatype='integer' name='dropoff_postcode' ordinal='17' />
            <column datatype='string' name='dropoff_neighborhood' ordinal='18' />
            <column datatype='string' name='dropoff_hour' ordinal='19' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>medallion</remote-name>
            <remote-type>129</remote-type>
            <local-name>[medallion]</local-name>
            <parent-name>[new_trip_data_1_5#csv]</parent-name>
            <remote-alias>medallion</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>hack_license</remote-name>
            <remote-type>129</remote-type>
            <local-name>[hack_license]</local-name>
            <parent-name>[new_trip_data_1_5#csv]</parent-name>
            <remote-alias>hack_license</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>vendor_id</remote-name>
            <remote-type>129</remote-type>
            <local-name>[vendor_id]</local-name>
            <parent-name>[new_trip_data_1_5#csv]</parent-name>
            <remote-alias>vendor_id</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>rate_code</remote-name>
            <remote-type>20</remote-type>
            <local-name>[rate_code]</local-name>
            <parent-name>[new_trip_data_1_5#csv]</parent-name>
            <remote-alias>rate_code</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>store_and_fwd_flag</remote-name>
            <remote-type>129</remote-type>
            <local-name>[store_and_fwd_flag]</local-name>
            <parent-name>[new_trip_data_1_5#csv]</parent-name>
            <remote-alias>store_and_fwd_flag</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>pickup_datetime</remote-name>
            <remote-type>135</remote-type>
            <local-name>[pickup_datetime]</local-name>
            <parent-name>[new_trip_data_1_5#csv]</parent-name>
            <remote-alias>pickup_datetime</remote-alias>
            <ordinal>5</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;datetime&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>dropoff_datetime</remote-name>
            <remote-type>135</remote-type>
            <local-name>[dropoff_datetime]</local-name>
            <parent-name>[new_trip_data_1_5#csv]</parent-name>
            <remote-alias>dropoff_datetime</remote-alias>
            <ordinal>6</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;datetime&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>passenger_count</remote-name>
            <remote-type>20</remote-type>
            <local-name>[passenger_count]</local-name>
            <parent-name>[new_trip_data_1_5#csv]</parent-name>
            <remote-alias>passenger_count</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>trip_time_in_secs</remote-name>
            <remote-type>20</remote-type>
            <local-name>[trip_time_in_secs]</local-name>
            <parent-name>[new_trip_data_1_5#csv]</parent-name>
            <remote-alias>trip_time_in_secs</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>trip_distance</remote-name>
            <remote-type>5</remote-type>
            <local-name>[trip_distance]</local-name>
            <parent-name>[new_trip_data_1_5#csv]</parent-name>
            <remote-alias>trip_distance</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>pickup_longitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[pickup_longitude]</local-name>
            <parent-name>[new_trip_data_1_5#csv]</parent-name>
            <remote-alias>pickup_longitude</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>pickup_latitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[pickup_latitude]</local-name>
            <parent-name>[new_trip_data_1_5#csv]</parent-name>
            <remote-alias>pickup_latitude</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>dropoff_longitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[dropoff_longitude]</local-name>
            <parent-name>[new_trip_data_1_5#csv]</parent-name>
            <remote-alias>dropoff_longitude</remote-alias>
            <ordinal>12</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>dropoff_latitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[dropoff_latitude]</local-name>
            <parent-name>[new_trip_data_1_5#csv]</parent-name>
            <remote-alias>dropoff_latitude</remote-alias>
            <ordinal>13</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>pickup_postcode</remote-name>
            <remote-type>20</remote-type>
            <local-name>[pickup_postcode]</local-name>
            <parent-name>[new_trip_data_1_5#csv]</parent-name>
            <remote-alias>pickup_postcode</remote-alias>
            <ordinal>14</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>pickup_neighborhood</remote-name>
            <remote-type>129</remote-type>
            <local-name>[pickup_neighborhood]</local-name>
            <parent-name>[new_trip_data_1_5#csv]</parent-name>
            <remote-alias>pickup_neighborhood</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>pickup_hour</remote-name>
            <remote-type>20</remote-type>
            <local-name>[pickup_hour]</local-name>
            <parent-name>[new_trip_data_1_5#csv]</parent-name>
            <remote-alias>pickup_hour</remote-alias>
            <ordinal>16</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>dropoff_postcode</remote-name>
            <remote-type>20</remote-type>
            <local-name>[dropoff_postcode]</local-name>
            <parent-name>[new_trip_data_1_5#csv]</parent-name>
            <remote-alias>dropoff_postcode</remote-alias>
            <ordinal>17</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>dropoff_neighborhood</remote-name>
            <remote-type>129</remote-type>
            <local-name>[dropoff_neighborhood]</local-name>
            <parent-name>[new_trip_data_1_5#csv]</parent-name>
            <remote-alias>dropoff_neighborhood</remote-alias>
            <ordinal>18</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>dropoff_hour</remote-name>
            <remote-type>129</remote-type>
            <local-name>[dropoff_hour]</local-name>
            <parent-name>[new_trip_data_1_5#csv]</parent-name>
            <remote-alias>dropoff_hour</remote-alias>
            <ordinal>19</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name></remote-name>
            <remote-type>0</remote-type>
            <parent-name>[new_trip_data_1_5#csv]</parent-name>
            <remote-alias></remote-alias>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Dropoff Datetime' datatype='datetime' name='[dropoff_datetime]' role='dimension' type='ordinal'>
      </column>
      <column caption='Dropoff Hour' datatype='string' name='[dropoff_hour]' role='dimension' type='nominal'>
      </column>
      <column aggregation='Avg' caption='Dropoff Latitude' datatype='real' name='[dropoff_latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative'>
      </column>
      <column aggregation='Avg' caption='Dropoff Longitude' datatype='real' name='[dropoff_longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative'>
      </column>
      <column caption='Dropoff Neighborhood' datatype='string' name='[dropoff_neighborhood]' role='dimension' type='nominal'>
      </column>
      <column caption='Dropoff Postcode' datatype='integer' default-format='*00000' name='[dropoff_postcode]' role='dimension' semantic-role='[ZipCode].[Name]' type='ordinal'>
      </column>
      <column caption='Hack License' datatype='string' name='[hack_license]' role='dimension' type='nominal'>
      </column>
      <column caption='Medallion' datatype='string' name='[medallion]' role='dimension' type='nominal'>
      </column>
      <column caption='Passenger Count' datatype='integer' name='[passenger_count]' role='measure' type='quantitative'>
      </column>
      <column caption='Pickup Datetime' datatype='datetime' name='[pickup_datetime]' role='dimension' type='ordinal'>
      </column>
      <column caption='Pickup Hour' datatype='integer' name='[pickup_hour]' role='measure' type='quantitative'>
      </column>
      <column aggregation='Avg' caption='Pickup Latitude' datatype='real' name='[pickup_latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative'>
      </column>
      <column aggregation='Avg' caption='Pickup Longitude' datatype='real' name='[pickup_longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative'>
      </column>
      <column caption='Pickup Neighborhood' datatype='string' name='[pickup_neighborhood]' role='dimension' type='nominal'>
      </column>
      <column caption='Pickup Postcode' datatype='integer' default-format='*00000' name='[pickup_postcode]' role='dimension' semantic-role='[ZipCode].[Name]' type='ordinal'>
      </column>
      <column caption='Rate Code' datatype='integer' name='[rate_code]' role='dimension' type='ordinal'>
      </column>
      <column caption='Store And Fwd Flag' datatype='string' name='[store_and_fwd_flag]' role='dimension' type='nominal'>
      </column>
      <column caption='Trip Distance' datatype='real' name='[trip_distance]' role='measure' type='quantitative'>
      </column>
      <column caption='Trip Time In Secs' datatype='integer' name='[trip_time_in_secs]' role='measure' type='quantitative'>
      </column>
      <column caption='Vendor Id' datatype='string' name='[vendor_id]' role='dimension' type='nominal'>
      </column>
      <column-instance column='[pickup_latitude]' derivation='None' name='[none:pickup_latitude:qk]' pivot='key' type='quantitative' />
      <column-instance column='[pickup_longitude]' derivation='None' name='[none:pickup_longitude:qk]' pivot='key' type='quantitative' />
      <column-instance column='[pickup_neighborhood]' derivation='None' name='[none:pickup_neighborhood:nk]' pivot='key' type='nominal' />
      <group hidden='true' name='[Exclusions (Pickup Latitude,Pickup Longitude)]' name-style='unqualified' user:auto-column='exclude'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:pickup_latitude:qk]' />
          <groupfilter function='level-members' level='[none:pickup_longitude:qk]' />
        </groupfilter>
      </group>
      <layout dim-ordering='alphabetic' dim-percentage='0.5' measure-ordering='alphabetic' measure-percentage='0.4' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:pickup_neighborhood:nk]' type='palette'>
            <map to='#17becf'>
              <bucket>&quot;Cobble Hill Historic District&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;Fresh Pond Junction&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;Koreatown&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;Park West Village&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;Tremont&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>%null%</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Corona&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Gowanus&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Lincoln Towers&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Parkville&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Tudor City&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Battery Park City&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Downtown Brooklyn&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Greenwich Village&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Lower East Side&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Rego Park&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Upper West Side&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Chinatown&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Flushing&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Kensington&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;NoHo&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Steinway&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Brooklyn Heights&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Eastchester Houses&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Hillside&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Midwood&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;SoHo&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Woodhaven&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Brighton Beach&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;East Harlem&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Hell&apos;s Kitchen&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Melrose&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Saint George&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;West Brighton&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;Bedford-Stuyvesant&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;DUMBO&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;Haberman&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;Manhattanville&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;Richmond Hill&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;Washington Heights&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;Colgate Center&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;Fulton Houses&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;Lefrak City&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;Parkchester&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;Tribeca&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;Adelphi&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;Crown Heights&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;Gowanus Houses&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;Little Italy&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;Port Morris&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;University Heights&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Clinton Hill&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Forest Hills Gardens&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Kings Bridge&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Ozone Park&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Sunnyside&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;Brooklyn Manor&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;Elmhurst&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;Inwood&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;Morningside Heights&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;South Slope&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;Woodside&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;Broad Channel&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;East Village&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;High Bridge&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;Midtown West&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;San Juan Hill&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;Williamsburg&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Clinton&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Forest Hills&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Kew Gardens&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;North Beach&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Stuyvesant Town&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Blissville&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;East Elmhurst&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Hamilton Heights&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Marcy Houses&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Rose Hill&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Washington Square Village&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;Cobble Hill&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;Fort Greene&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;Kips Bay&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;Park Slope&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;Sunnyside Gardens&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Bushwick&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Flatbush&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Jackson Heights&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Mott Haven&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;South Street Seaport&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Wyckoff Gardens&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;Chelsea&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;Flatiron&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;Murray Hill&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;Southbridge Towers&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;Yorkville&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Alphabet City&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Diamond District&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Gravesend&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Loisaida&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Prospect Heights&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;University Village&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;Boerum Hill&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;East Flatbush&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;Harlem&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;Maspeth&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;Rosedale&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;Waterside Plaza&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;Astoria&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;Ditmas Park&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;Greenpoint&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;Long Island City&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;Red Hook&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;Upper East Side&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='top_pick_neighborhood' inline='true' name='textscan.41981.778114803237' version='8.3'>
      <connection class='textscan' directory='C:/Users/ELin/Desktop/BigData/BigDataProject/viz' filename='top_pick_neighborhood.csv'>
        <relation name='top_pick_neighborhood#csv' table='[top_pick_neighborhood#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='neighborhood' ordinal='0' />
            <column datatype='real' name='percentage' ordinal='1' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>neighborhood</remote-name>
            <remote-type>129</remote-type>
            <local-name>[neighborhood]</local-name>
            <parent-name>[top_pick_neighborhood#csv]</parent-name>
            <remote-alias>neighborhood</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>percentage</remote-name>
            <remote-type>5</remote-type>
            <local-name>[percentage]</local-name>
            <parent-name>[top_pick_neighborhood#csv]</parent-name>
            <remote-alias>percentage</remote-alias>
            <ordinal>1</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name></remote-name>
            <remote-type>0</remote-type>
            <parent-name>[top_pick_neighborhood#csv]</parent-name>
            <remote-alias></remote-alias>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Neighborhood' datatype='string' name='[neighborhood]' role='dimension' type='nominal'>
      </column>
      <column caption='Percentage' datatype='real' name='[percentage]' role='measure' type='quantitative'>
      </column>
      <column-instance column='[neighborhood]' derivation='None' name='[none:neighborhood:nk]' pivot='key' type='nominal' />
      <layout dim-ordering='alphabetic' dim-percentage='0.5' measure-ordering='alphabetic' measure-percentage='0.4' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:neighborhood:nk]' type='palette'>
            <map to='#1f77b4'>
              <bucket>%null%</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Koreatown&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Upper East Side&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;San Juan Hill&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;Lincoln Towers&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;Diamond District&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;Yorkville&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;Tudor City&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Murray Hill&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Flatiron&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;Other&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;Fulton Houses&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='top_drop_neighborhood' inline='true' name='textscan.41981.782392928239' version='8.3'>
      <connection class='textscan' directory='C:/Users/ELin/Desktop/BigData/BigDataProject/viz' filename='top_drop_neighborhood.csv'>
        <relation name='top_drop_neighborhood#csv' table='[top_drop_neighborhood#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='neighborhood' ordinal='0' />
            <column datatype='real' name='percentage' ordinal='1' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>neighborhood</remote-name>
            <remote-type>129</remote-type>
            <local-name>[neighborhood]</local-name>
            <parent-name>[top_drop_neighborhood#csv]</parent-name>
            <remote-alias>neighborhood</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>percentage</remote-name>
            <remote-type>5</remote-type>
            <local-name>[percentage]</local-name>
            <parent-name>[top_drop_neighborhood#csv]</parent-name>
            <remote-alias>percentage</remote-alias>
            <ordinal>1</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name></remote-name>
            <remote-type>0</remote-type>
            <parent-name>[top_drop_neighborhood#csv]</parent-name>
            <remote-alias></remote-alias>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Neighborhood' datatype='string' name='[neighborhood]' role='dimension' type='nominal'>
      </column>
      <column caption='Percentage' datatype='real' name='[percentage]' role='measure' type='quantitative'>
      </column>
      <column-instance column='[neighborhood]' derivation='None' name='[none:neighborhood:nk]' pivot='key' type='nominal' />
      <layout dim-ordering='alphabetic' dim-percentage='0.5' measure-ordering='alphabetic' measure-percentage='0.4' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:neighborhood:nk]' type='palette'>
            <map to='#1f77b4'>
              <bucket>%null%</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Koreatown&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Upper East Side&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;San Juan Hill&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;Lincoln Towers&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;Diamond District&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;Yorkville&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;Tudor City&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Murray Hill&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Fulton Houses&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;Other&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;Hell&apos;s Kitchen&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='avg_speed_per_hour' inline='true' name='textscan.41981.789711331017' version='8.3'>
      <connection class='textscan' directory='C:/Users/ELin/Desktop/BigData/BigDataProject/viz' filename='avg_speed_per_hour.csv'>
        <relation name='avg_speed_per_hour#csv' table='[avg_speed_per_hour#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='integer' name='hour' ordinal='0' />
            <column datatype='real' name='speed' ordinal='1' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>hour</remote-name>
            <remote-type>20</remote-type>
            <local-name>[hour]</local-name>
            <parent-name>[avg_speed_per_hour#csv]</parent-name>
            <remote-alias>hour</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>speed</remote-name>
            <remote-type>5</remote-type>
            <local-name>[speed]</local-name>
            <parent-name>[avg_speed_per_hour#csv]</parent-name>
            <remote-alias>speed</remote-alias>
            <ordinal>1</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name></remote-name>
            <remote-type>0</remote-type>
            <parent-name>[avg_speed_per_hour#csv]</parent-name>
            <remote-alias></remote-alias>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Hour' datatype='integer' name='[hour]' role='measure' type='quantitative'>
      </column>
      <column caption='Speed' datatype='real' name='[speed]' role='measure' type='quantitative'>
      </column>
      <layout dim-ordering='alphabetic' dim-percentage='0.5' measure-ordering='alphabetic' measure-percentage='0.4' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='avg_farep_neighborhood+' inline='true' name='textscan.41981.809931435186' version='8.3'>
      <connection class='textscan' directory='C:/Users/ELin/Desktop/BigData/BigDataProject/viz' filename='avg_farep_neighborhood.csv'>
        <relation join='inner' type='join'>
          <clause type='join'>
            <expression op='='>
              <expression op='[avg_farep_neighborhood#csv].[neighborhood]'>
              </expression>
              <expression op='[geolocator_data#csv].[neighborhood]'>
              </expression>
            </expression>
          </clause>
          <relation name='avg_farep_neighborhood#csv' table='[avg_farep_neighborhood#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='string' name='neighborhood' ordinal='0' />
              <column datatype='real' name='tip %' ordinal='1' />
            </columns>
          </relation>
          <relation name='geolocator_data#csv' table='[geolocator_data#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='string' name='neighborhood' ordinal='0' />
              <column datatype='real' name='longitude' ordinal='1' />
              <column datatype='real' name='latitude' ordinal='2' />
            </columns>
          </relation>
        </relation>
        <cols>
          <map key='[latitude]' value='[geolocator_data#csv].[latitude]' />
          <map key='[longitude]' value='[geolocator_data#csv].[longitude]' />
          <map key='[neighborhood (geolocator_data.csv)]' value='[geolocator_data#csv].[neighborhood]' />
          <map key='[neighborhood]' value='[avg_farep_neighborhood#csv].[neighborhood]' />
          <map key='[tip %]' value='[avg_farep_neighborhood#csv].[tip %]' />
        </cols>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>neighborhood</remote-name>
            <remote-type>129</remote-type>
            <local-name>[neighborhood]</local-name>
            <parent-name>[avg_farep_neighborhood#csv]</parent-name>
            <remote-alias>neighborhood</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>tip %</remote-name>
            <remote-type>5</remote-type>
            <local-name>[tip %]</local-name>
            <parent-name>[avg_farep_neighborhood#csv]</parent-name>
            <remote-alias>tip %</remote-alias>
            <ordinal>1</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name></remote-name>
            <remote-type>0</remote-type>
            <parent-name>[avg_farep_neighborhood#csv]</parent-name>
            <remote-alias></remote-alias>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>neighborhood</remote-name>
            <remote-type>129</remote-type>
            <local-name>[neighborhood (geolocator_data.csv)]</local-name>
            <parent-name>[geolocator_data#csv]</parent-name>
            <remote-alias>neighborhood</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>longitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[longitude]</local-name>
            <parent-name>[geolocator_data#csv]</parent-name>
            <remote-alias>longitude</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>latitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[latitude]</local-name>
            <parent-name>[geolocator_data#csv]</parent-name>
            <remote-alias>latitude</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name></remote-name>
            <remote-type>0</remote-type>
            <parent-name>[geolocator_data#csv]</parent-name>
            <remote-alias></remote-alias>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column aggregation='Avg' caption='Latitude' datatype='real' name='[latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative'>
      </column>
      <column aggregation='Avg' caption='Longitude' datatype='real' name='[longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative'>
      </column>
      <column caption='Neighborhood (Geolocator Data.Csv)' datatype='string' name='[neighborhood (geolocator_data.csv)]' role='dimension' type='nominal'>
      </column>
      <column caption='Neighborhood' datatype='string' name='[neighborhood]' role='dimension' type='nominal'>
      </column>
      <column caption='Tip %' datatype='real' name='[tip %]' role='measure' type='quantitative'>
      </column>
      <column-instance column='[latitude]' derivation='None' name='[none:latitude:qk]' pivot='key' type='quantitative' />
      <column-instance column='[longitude]' derivation='None' name='[none:longitude:qk]' pivot='key' type='quantitative' />
      <group hidden='true' name='[Exclusions (Latitude,Longitude)]' name-style='unqualified' user:auto-column='exclude'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:latitude:qk]' />
          <groupfilter function='level-members' level='[none:longitude:qk]' />
        </groupfilter>
      </group>
      <layout dim-ordering='alphabetic' dim-percentage='0.5' measure-ordering='alphabetic' measure-percentage='0.4' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='avg_farep_10k' inline='true' name='textscan.41981.814407766207' version='8.3'>
      <connection class='textscan' directory='C:/Users/ELin/Desktop/BigData/BigDataProject/viz' filename='avg_farep_10k.csv'>
        <relation name='avg_farep_10k#csv' table='[avg_farep_10k#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='neighborhood' ordinal='0' />
            <column datatype='real' name='tip %' ordinal='1' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>neighborhood</remote-name>
            <remote-type>129</remote-type>
            <local-name>[neighborhood]</local-name>
            <parent-name>[avg_farep_10k#csv]</parent-name>
            <remote-alias>neighborhood</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>tip %</remote-name>
            <remote-type>5</remote-type>
            <local-name>[tip %]</local-name>
            <parent-name>[avg_farep_10k#csv]</parent-name>
            <remote-alias>tip %</remote-alias>
            <ordinal>1</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name></remote-name>
            <remote-type>0</remote-type>
            <parent-name>[avg_farep_10k#csv]</parent-name>
            <remote-alias></remote-alias>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Neighborhood' datatype='string' name='[neighborhood]' role='dimension' type='nominal'>
      </column>
      <column caption='Tip %' datatype='real' name='[tip %]' role='measure' type='quantitative'>
      </column>
      <layout dim-ordering='alphabetic' dim-percentage='0.5' measure-ordering='alphabetic' measure-percentage='0.4' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='avg_farep_1000k' inline='true' name='textscan.41981.815276898145' version='8.3'>
      <connection class='textscan' directory='C:/Users/ELin/Desktop/BigData/BigDataProject/viz' filename='avg_farep_1000k.csv'>
        <relation name='avg_farep_1000k#csv' table='[avg_farep_1000k#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='neighborhood' ordinal='0' />
            <column datatype='real' name='tip %' ordinal='1' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>neighborhood</remote-name>
            <remote-type>129</remote-type>
            <local-name>[neighborhood]</local-name>
            <parent-name>[avg_farep_1000k#csv]</parent-name>
            <remote-alias>neighborhood</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>tip %</remote-name>
            <remote-type>5</remote-type>
            <local-name>[tip %]</local-name>
            <parent-name>[avg_farep_1000k#csv]</parent-name>
            <remote-alias>tip %</remote-alias>
            <ordinal>1</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name></remote-name>
            <remote-type>0</remote-type>
            <parent-name>[avg_farep_1000k#csv]</parent-name>
            <remote-alias></remote-alias>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Neighborhood' datatype='string' name='[neighborhood]' role='dimension' type='nominal'>
      </column>
      <column caption='Tip %' datatype='real' name='[tip %]' role='measure' type='quantitative'>
      </column>
      <layout dim-ordering='alphabetic' dim-percentage='0.5' measure-ordering='alphabetic' measure-percentage='0.4' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='payment_type_neighborhood+' inline='true' name='textscan.41981.857853831018' version='8.3'>
      <connection class='textscan' directory='C:/Users/ELin/Desktop/BigData/BigDataProject/viz' filename='payment_type_neighborhood.csv'>
        <relation join='inner' type='join'>
          <clause type='join'>
            <expression op='='>
              <expression op='[payment_type_neighborhood#csv].[neighborhood]'>
              </expression>
              <expression op='[geolocator_data#csv].[neighborhood]'>
              </expression>
            </expression>
          </clause>
          <relation name='payment_type_neighborhood#csv' table='[payment_type_neighborhood#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='string' name='neighborhood' ordinal='0' />
              <column datatype='string' name='pay type' ordinal='1' />
              <column datatype='integer' name='# rides' ordinal='2' />
            </columns>
          </relation>
          <relation name='geolocator_data#csv' table='[geolocator_data#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='string' name='neighborhood' ordinal='0' />
              <column datatype='real' name='longitude' ordinal='1' />
              <column datatype='real' name='latitude' ordinal='2' />
            </columns>
          </relation>
        </relation>
        <cols>
          <map key='[# rides]' value='[payment_type_neighborhood#csv].[# rides]' />
          <map key='[latitude]' value='[geolocator_data#csv].[latitude]' />
          <map key='[longitude]' value='[geolocator_data#csv].[longitude]' />
          <map key='[neighborhood (geolocator_data.csv)]' value='[geolocator_data#csv].[neighborhood]' />
          <map key='[neighborhood]' value='[payment_type_neighborhood#csv].[neighborhood]' />
          <map key='[pay type]' value='[payment_type_neighborhood#csv].[pay type]' />
        </cols>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>neighborhood</remote-name>
            <remote-type>129</remote-type>
            <local-name>[neighborhood]</local-name>
            <parent-name>[payment_type_neighborhood#csv]</parent-name>
            <remote-alias>neighborhood</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>pay type</remote-name>
            <remote-type>129</remote-type>
            <local-name>[pay type]</local-name>
            <parent-name>[payment_type_neighborhood#csv]</parent-name>
            <remote-alias>pay type</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name># rides</remote-name>
            <remote-type>20</remote-type>
            <local-name>[# rides]</local-name>
            <parent-name>[payment_type_neighborhood#csv]</parent-name>
            <remote-alias># rides</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name></remote-name>
            <remote-type>0</remote-type>
            <parent-name>[payment_type_neighborhood#csv]</parent-name>
            <remote-alias></remote-alias>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>neighborhood</remote-name>
            <remote-type>129</remote-type>
            <local-name>[neighborhood (geolocator_data.csv)]</local-name>
            <parent-name>[geolocator_data#csv]</parent-name>
            <remote-alias>neighborhood</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>longitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[longitude]</local-name>
            <parent-name>[geolocator_data#csv]</parent-name>
            <remote-alias>longitude</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>latitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[latitude]</local-name>
            <parent-name>[geolocator_data#csv]</parent-name>
            <remote-alias>latitude</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name></remote-name>
            <remote-type>0</remote-type>
            <parent-name>[geolocator_data#csv]</parent-name>
            <remote-alias></remote-alias>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='# Rides' datatype='integer' name='[# rides]' role='measure' type='quantitative'>
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column aggregation='Avg' caption='Latitude' datatype='real' name='[latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative'>
      </column>
      <column aggregation='Avg' caption='Longitude' datatype='real' name='[longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative'>
      </column>
      <column caption='Neighborhood (Geolocator Data.Csv)' datatype='string' name='[neighborhood (geolocator_data.csv)]' role='dimension' type='nominal'>
      </column>
      <column caption='Neighborhood' datatype='string' name='[neighborhood]' role='dimension' type='nominal'>
      </column>
      <column caption='Pay Type' datatype='string' name='[pay type]' role='dimension' type='nominal'>
      </column>
      <layout dim-ordering='alphabetic' dim-percentage='0.5' measure-ordering='alphabetic' measure-percentage='0.4' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='payment_type_neighborhood' inline='true' name='textscan.41981.899219826388' version='8.3'>
      <connection class='textscan' directory='C:/Users/ELin/Desktop/BigData/BigDataProject/viz' filename='payment_type_neighborhood.csv'>
        <relation name='payment_type_time#csv' table='[payment_type_time#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='integer' name='hour' ordinal='0' />
            <column datatype='real' name='card/cash ratio' ordinal='1' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>hour</remote-name>
            <remote-type>20</remote-type>
            <local-name>[hour]</local-name>
            <parent-name>[payment_type_time#csv]</parent-name>
            <remote-alias>hour</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>card/cash ratio</remote-name>
            <remote-type>5</remote-type>
            <local-name>[card/cash ratio]</local-name>
            <parent-name>[payment_type_time#csv]</parent-name>
            <remote-alias>card/cash ratio</remote-alias>
            <ordinal>1</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name></remote-name>
            <remote-type>0</remote-type>
            <parent-name>[payment_type_time#csv]</parent-name>
            <remote-alias></remote-alias>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='# Rides' datatype='integer' name='[# rides]' role='measure' type='quantitative'>
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Hour' datatype='integer' name='[hour]' role='measure' type='quantitative'>
      </column>
      <column caption='Pay Type' datatype='string' name='[pay type]' role='dimension' type='nominal'>
      </column>
      <layout dim-ordering='alphabetic' dim-percentage='0.5' measure-ordering='alphabetic' measure-percentage='0.4' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='payment_type_time' inline='true' name='textscan.41981.907503576389' version='8.3'>
      <connection class='textscan' directory='C:/Users/ELin/Desktop/BigData/BigDataProject/viz' filename='payment_type_time.csv'>
        <relation name='payment_type_time#csv' table='[payment_type_time#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='integer' name='hour' ordinal='0' />
            <column datatype='real' name='card/cash ratio' ordinal='1' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>hour</remote-name>
            <remote-type>20</remote-type>
            <local-name>[hour]</local-name>
            <parent-name>[payment_type_time#csv]</parent-name>
            <remote-alias>hour</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>card/cash ratio</remote-name>
            <remote-type>5</remote-type>
            <local-name>[card/cash ratio]</local-name>
            <parent-name>[payment_type_time#csv]</parent-name>
            <remote-alias>card/cash ratio</remote-alias>
            <ordinal>1</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name></remote-name>
            <remote-type>0</remote-type>
            <parent-name>[payment_type_time#csv]</parent-name>
            <remote-alias></remote-alias>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Card/Cash Ratio' datatype='real' name='[card/cash ratio]' role='measure' type='quantitative'>
      </column>
      <column caption='Hour' datatype='integer' name='[hour]' role='measure' type='quantitative'>
      </column>
      <layout dim-ordering='alphabetic' dim-percentage='0.5' measure-ordering='alphabetic' measure-percentage='0.4' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='avg_farep_100k' inline='true' name='textscan.41981.815420844905' version='8.3'>
      <connection class='textscan' directory='C:/Users/ELin/Desktop/BigData/BigDataProject/viz' filename='avg_farep_100k.csv'>
        <relation name='avg_farep_100k#csv' table='[avg_farep_100k#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='neighborhood' ordinal='0' />
            <column datatype='real' name='percentage' ordinal='1' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>neighborhood</remote-name>
            <remote-type>129</remote-type>
            <local-name>[neighborhood]</local-name>
            <parent-name>[avg_farep_100k#csv]</parent-name>
            <remote-alias>neighborhood</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>percentage</remote-name>
            <remote-type>5</remote-type>
            <local-name>[percentage]</local-name>
            <parent-name>[avg_farep_100k#csv]</parent-name>
            <remote-alias>percentage</remote-alias>
            <ordinal>1</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name></remote-name>
            <remote-type>0</remote-type>
            <parent-name>[avg_farep_100k#csv]</parent-name>
            <remote-alias></remote-alias>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Neighborhood' datatype='string' name='[neighborhood]' role='dimension' type='nominal'>
      </column>
      <column caption='Percentage' datatype='real' name='[percentage]' role='measure' type='quantitative'>
      </column>
      <column-instance column='[neighborhood]' derivation='None' name='[none:neighborhood:nk]' pivot='key' type='nominal' />
      <column-instance column='[percentage]' derivation='Sum' name='[sum:percentage:qk]' pivot='key' type='quantitative' />
      <layout dim-ordering='alphabetic' dim-percentage='0.5' measure-ordering='alphabetic' measure-percentage='0.4' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#1f77b4'>
              <bucket>&quot;[textscan.41981.815420844905].[sum:percentage:qk]&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;[textscan.41981.815276898145].[attr:tip \%:qk]&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;[textscan.41981.815276898145].[sum:tip \%:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:neighborhood:nk]' type='palette'>
            <map to='#17becf'>
              <bucket>&quot;Loisaida&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;Washington Square Village&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>%null%</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Alphabet City&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Midtown West&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Yorkville&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Clinton&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;North Beach&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Kips Bay&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Tudor City&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Fulton Houses&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;South Street Seaport&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;East Village&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;San Juan Hill&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;Diamond District&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;Park West Village&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;Lower East Side&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;Williamsburg&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;Battery Park City&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;Morningside Heights&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Lincoln Towers&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Upper East Side&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;Greenwich Village&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;Southbridge Towers&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;Flatiron&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;SoHo&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Koreatown&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;University Village&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;East Elmhurst&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Rochdale Village&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;Little Italy&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;Upper West Side&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Harlem&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Stuyvesant Town&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;Hell&apos;s Kitchen&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;Tribeca&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Chelsea&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Murray Hill&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;East Harlem&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;Rose Hill&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;Chinatown&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;NoHo&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <datasource-dependencies datasource='textscan.41981.815276898145'>
        <column-instance column='[tip %]' derivation='Sum' name='[sum:tip %:qk]' pivot='key' type='quantitative' />
        <column caption='Tip %' datatype='real' name='[tip %]' role='measure' type='quantitative'>
        </column>
      </datasource-dependencies>
    </datasource>
    <datasource caption='tip_by_distance' inline='true' name='textscan.41982.808242835650' version='8.3'>
      <connection class='textscan' directory='C:/Users/ELin/Desktop/BigData/BigDataProject/viz' filename='tip_by_distance.csv'>
        <relation name='tip_by_distance#csv' table='[tip_by_distance#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='Distance' ordinal='0' />
            <column datatype='real' name='Tip %' ordinal='1' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Distance</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Distance]</local-name>
            <parent-name>[tip_by_distance#csv]</parent-name>
            <remote-alias>Distance</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Tip %</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Tip %]</local-name>
            <parent-name>[tip_by_distance#csv]</parent-name>
            <remote-alias>Tip %</remote-alias>
            <ordinal>1</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name></remote-name>
            <remote-type>0</remote-type>
            <parent-name>[tip_by_distance#csv]</parent-name>
            <remote-alias></remote-alias>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <layout dim-ordering='alphabetic' dim-percentage='0.5' measure-ordering='alphabetic' measure-percentage='0.4' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='count_by_pickup_hour' inline='true' name='textscan.41982.874145752314' version='8.3'>
      <connection class='textscan' directory='C:/Users/ELin/Desktop/BigData/BigDataProject/viz' filename='count_by_pickup_hour.csv'>
        <relation name='count_by_pickup_hour#csv' table='[count_by_pickup_hour#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='integer' name='Hour' ordinal='0' />
            <column datatype='real' name='Percent' ordinal='1' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Hour</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Hour]</local-name>
            <parent-name>[count_by_pickup_hour#csv]</parent-name>
            <remote-alias>Hour</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Percent</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Percent]</local-name>
            <parent-name>[count_by_pickup_hour#csv]</parent-name>
            <remote-alias>Percent</remote-alias>
            <ordinal>1</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name></remote-name>
            <remote-type>0</remote-type>
            <parent-name>[count_by_pickup_hour#csv]</parent-name>
            <remote-alias></remote-alias>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <layout dim-ordering='alphabetic' dim-percentage='0.5' measure-ordering='alphabetic' measure-percentage='0.4' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='avg_tip_by_hour' inline='true' name='textscan.41982.884052731482' version='8.3'>
      <connection class='textscan' directory='C:/Users/ELin/Desktop/BigData/BigDataProject/viz' filename='avg_tip_by_hour.csv'>
        <relation name='avg_tip_by_hour#csv' table='[avg_tip_by_hour#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='integer' name='hour' ordinal='0' />
            <column datatype='real' name='tip %' ordinal='1' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>hour</remote-name>
            <remote-type>20</remote-type>
            <local-name>[hour]</local-name>
            <parent-name>[avg_tip_by_hour#csv]</parent-name>
            <remote-alias>hour</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>tip %</remote-name>
            <remote-type>5</remote-type>
            <local-name>[tip %]</local-name>
            <parent-name>[avg_tip_by_hour#csv]</parent-name>
            <remote-alias>tip %</remote-alias>
            <ordinal>1</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name></remote-name>
            <remote-type>0</remote-type>
            <parent-name>[avg_tip_by_hour#csv]</parent-name>
            <remote-alias></remote-alias>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Hour' datatype='integer' name='[hour]' role='measure' type='quantitative'>
      </column>
      <column caption='Tip %' datatype='real' name='[tip %]' role='measure' type='quantitative'>
      </column>
      <layout dim-ordering='alphabetic' dim-percentage='0.5' measure-ordering='alphabetic' measure-percentage='0.4' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='mph'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Average speed per hour (mph)</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='avg_speed_per_hour' name='textscan.41981.789711331017' />
          </datasources>
          <datasource-dependencies datasource='textscan.41981.789711331017'>
            <column caption='Hour' datatype='integer' name='[hour]' role='measure' type='quantitative'>
            </column>
            <column-instance column='[hour]' derivation='None' name='[none:hour:qk]' pivot='key' type='quantitative' />
            <column-instance column='[speed]' derivation='None' name='[none:speed:qk]' pivot='key' type='quantitative' />
            <column caption='Speed' datatype='real' name='[speed]' role='measure' type='quantitative'>
            </column>
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
          </pane>
        </panes>
        <rows>[textscan.41981.789711331017].[none:speed:qk]</rows>
        <cols>[textscan.41981.789711331017].[none:hour:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='neighborhoods'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Pickup neighborhoods</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='new_trip_data_1_5' name='textscan.41980.593389085647' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='textscan.41980.593389085647'>
            <column-instance column='[pickup_latitude]' derivation='None' name='[none:pickup_latitude:qk]' pivot='key' type='quantitative' />
            <column-instance column='[pickup_longitude]' derivation='None' name='[none:pickup_longitude:qk]' pivot='key' type='quantitative' />
            <column-instance column='[pickup_neighborhood]' derivation='None' name='[none:pickup_neighborhood:nk]' pivot='key' type='nominal' />
            <column aggregation='Avg' caption='Pickup Latitude' datatype='real' name='[pickup_latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative'>
            </column>
            <column aggregation='Avg' caption='Pickup Longitude' datatype='real' name='[pickup_longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative'>
            </column>
            <column caption='Pickup Neighborhood' datatype='string' name='[pickup_neighborhood]' role='dimension' type='nominal'>
            </column>
          </datasource-dependencies>
          <filter class='categorical' column='[textscan.41980.593389085647].[none:pickup_neighborhood:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:pickup_neighborhood:nk]' />
              <groupfilter function='member' level='[none:pickup_neighborhood:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <slices>
            <column>[textscan.41980.593389085647].[none:pickup_neighborhood:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[textscan.41980.593389085647].[none:pickup_longitude:qk]' field-type='quantitative' max='-8177004.7593651088' min='-8284968.6035300987' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[textscan.41980.593389085647].[none:pickup_latitude:qk]' field-type='quantitative' max='5010239.2598675005' min='4947585.7254067399' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane id='5'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[textscan.41980.593389085647].[none:pickup_neighborhood:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
                <format attr='size' value='0.38381215929985046' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[textscan.41980.593389085647].[none:pickup_latitude:qk]</rows>
        <cols>[textscan.41980.593389085647].[none:pickup_longitude:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='pay type (neigh)'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Payment type by neighborhood</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='payment_type_neighborhood+' name='textscan.41981.857853831018' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='textscan.41981.857853831018'>
            <column caption='# Rides' datatype='integer' name='[# rides]' role='measure' type='quantitative'>
            </column>
            <column aggregation='Avg' caption='Latitude' datatype='real' name='[latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative'>
            </column>
            <column aggregation='Avg' caption='Longitude' datatype='real' name='[longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative'>
            </column>
            <column caption='Neighborhood' datatype='string' name='[neighborhood]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[# rides]' derivation='None' name='[none:# rides:qk]' pivot='key' type='quantitative' />
            <column-instance column='[latitude]' derivation='None' name='[none:latitude:qk]' pivot='key' type='quantitative' />
            <column-instance column='[longitude]' derivation='None' name='[none:longitude:qk]' pivot='key' type='quantitative' />
            <column-instance column='[neighborhood]' derivation='None' name='[none:neighborhood:nk]' pivot='key' type='nominal' />
            <column-instance column='[pay type]' derivation='None' name='[none:pay type:nk]' pivot='key' type='nominal' />
            <column caption='Pay Type' datatype='string' name='[pay type]' role='dimension' type='nominal'>
            </column>
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[textscan.41981.857853831018].[none:longitude:qk]' field-type='quantitative' max='-8188935.4488459481' min='-8264531.6698199874' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[textscan.41981.857853831018].[none:latitude:qk]' field-type='quantitative' max='5009818.6052763853' min='4971905.839246938' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='size' field='[textscan.41981.857853831018].[none:# rides:qk]' field-type='quantitative' max-size='1' min-size='0.997814' type='rangesize' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <encodings>
              <color column='[textscan.41981.857853831018].[none:pay type:nk]' />
              <size column='[textscan.41981.857853831018].[none:# rides:qk]' />
              <lod column='[textscan.41981.857853831018].[none:neighborhood:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.87970370054244995' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[textscan.41981.857853831018].[none:latitude:qk]</rows>
        <cols>[textscan.41981.857853831018].[none:longitude:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='pay type (time)'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Card/cash ratio by time</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='payment_type_time' name='textscan.41981.907503576389' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='1' datatype='real' name='[Parameter 1]' param-domain-type='any' role='measure' type='quantitative' value='1.0'>
              <calculation class='tableau' formula='1.0' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='textscan.41981.907503576389'>
            <column caption='Card/Cash Ratio' datatype='real' name='[card/cash ratio]' role='measure' type='quantitative'>
            </column>
            <column caption='Hour' datatype='integer' name='[hour]' role='measure' type='quantitative'>
            </column>
            <column-instance column='[card/cash ratio]' derivation='None' name='[none:card/cash ratio:qk]' pivot='key' type='quantitative' />
            <column-instance column='[hour]' derivation='None' name='[none:hour:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='subtitle' class='0' field='[textscan.41981.907503576389].[none:hour:qk]' scope='cols' value='' />
            <format attr='auto-subtitle' class='0' field='[textscan.41981.907503576389].[none:hour:qk]' scope='cols' value='true' />
            <encoding attr='space' class='0' field='[textscan.41981.907503576389].[none:hour:qk]' field-type='quantitative' max='25' min='0' range-type='fixed' scope='cols' type='space' />
            <format attr='width' field='[textscan.41981.907503576389].[none:card/cash ratio:qk]' value='48' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <reference-line axis-column='[textscan.41981.907503576389].[none:card/cash ratio:qk]' formula='average' id='refline0' label-type='automatic' scope='per-pane' value-column='[Parameters].[Parameter 1]' z-order='1' />
          </pane>
        </panes>
        <rows>[textscan.41981.907503576389].[none:card/cash ratio:qk]</rows>
        <cols>[textscan.41981.907503576389].[none:hour:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='pickup/hour'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Pickups by hour</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='count_by_pickup_hour' name='textscan.41982.874145752314' />
          </datasources>
          <datasource-dependencies datasource='textscan.41982.874145752314'>
            <column datatype='integer' name='[Hour]' role='measure' type='quantitative'>
            </column>
            <column datatype='real' name='[Percent]' role='measure' type='quantitative'>
            </column>
            <column-instance column='[Hour]' derivation='None' name='[none:Hour:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Percent]' derivation='None' name='[none:Percent:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
          </pane>
        </panes>
        <rows>[textscan.41982.874145752314].[none:Percent:qk]</rows>
        <cols>[textscan.41982.874145752314].[none:Hour:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='tip % (dist)'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Tip % by distance</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='tip_by_distance' name='textscan.41982.808242835650' />
          </datasources>
          <datasource-dependencies datasource='textscan.41982.808242835650'>
            <column datatype='string' name='[Distance]' role='dimension' type='nominal'>
            </column>
            <column datatype='real' name='[Tip %]' role='measure' type='quantitative'>
            </column>
            <column-instance column='[Distance]' derivation='None' name='[none:Distance:nk]' pivot='key' type='nominal' />
            <column-instance column='[Tip %]' derivation='None' name='[none:Tip %:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
          </pane>
        </panes>
        <rows>[textscan.41982.808242835650].[none:Tip %:qk]</rows>
        <cols>[textscan.41982.808242835650].[none:Distance:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='tip (10k)'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Tip % with &gt; 10k points of data per neighborhood</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='avg_farep_10k' name='textscan.41981.814407766207' />
          </datasources>
          <datasource-dependencies datasource='textscan.41981.814407766207'>
            <column caption='Neighborhood' datatype='string' name='[neighborhood]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[neighborhood]' derivation='None' name='[none:neighborhood:nk]' pivot='key' type='nominal' />
            <column-instance column='[tip %]' derivation='Sum' name='[sum:tip %:qk]' pivot='key' type='quantitative' />
            <column caption='Tip %' datatype='real' name='[tip %]' role='measure' type='quantitative'>
            </column>
          </datasource-dependencies>
          <sort class='computed' column='[textscan.41981.814407766207].[none:neighborhood:nk]' direction='DESC' using='[textscan.41981.814407766207].[sum:tip %:qk]'>
          </sort>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='subtitle' class='0' field='[textscan.41981.814407766207].[sum:tip %:qk]' scope='cols' value='' />
            <format attr='auto-subtitle' class='0' field='[textscan.41981.814407766207].[sum:tip %:qk]' scope='cols' value='true' />
            <encoding attr='space' class='0' domain-expand='false' field='[textscan.41981.814407766207].[sum:tip %:qk]' field-type='quantitative' scope='cols' type='space' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[textscan.41981.814407766207].[none:neighborhood:nk]' value='228' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-size' field='[textscan.41981.814407766207].[none:neighborhood:nk]' value='12' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <style>
              <style-rule element='datalabel'>
                <format attr='font-size' value='16' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='size' value='1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[textscan.41981.814407766207].[none:neighborhood:nk]</rows>
        <cols>[textscan.41981.814407766207].[sum:tip %:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='tip (1M)'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Tip % with &gt; 1M points of data per neighborhood</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='avg_farep_1000k' name='textscan.41981.815276898145' />
          </datasources>
          <datasource-dependencies datasource='textscan.41981.815276898145'>
            <column caption='Neighborhood' datatype='string' name='[neighborhood]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[neighborhood]' derivation='None' name='[none:neighborhood:nk]' pivot='key' type='nominal' />
            <column-instance column='[tip %]' derivation='Sum' name='[sum:tip %:qk]' pivot='key' type='quantitative' />
            <column caption='Tip %' datatype='real' name='[tip %]' role='measure' type='quantitative'>
            </column>
          </datasource-dependencies>
          <sort class='computed' column='[textscan.41981.815276898145].[none:neighborhood:nk]' direction='DESC' using='[textscan.41981.815276898145].[sum:tip %:qk]'>
          </sort>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='subtitle' class='0' field='[textscan.41981.815276898145].[sum:tip %:qk]' scope='cols' value='' />
            <format attr='auto-subtitle' class='0' field='[textscan.41981.815276898145].[sum:tip %:qk]' scope='cols' value='true' />
            <encoding attr='space' class='0' domain-expand='false' field='[textscan.41981.815276898145].[sum:tip %:qk]' field-type='quantitative' scope='cols' type='space' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-size' field='[textscan.41981.815276898145].[none:neighborhood:nk]' value='12' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
          </pane>
        </panes>
        <rows>[textscan.41981.815276898145].[none:neighborhood:nk]</rows>
        <cols>[textscan.41981.815276898145].[sum:tip %:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='tip (all)'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Map of all tips</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='avg_farep_neighborhood+' name='textscan.41981.809931435186' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='textscan.41981.809931435186'>
            <column aggregation='Avg' caption='Latitude' datatype='real' name='[latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative'>
            </column>
            <column aggregation='Avg' caption='Longitude' datatype='real' name='[longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative'>
            </column>
            <column caption='Neighborhood' datatype='string' name='[neighborhood]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[latitude]' derivation='None' name='[none:latitude:qk]' pivot='key' type='quantitative' />
            <column-instance column='[longitude]' derivation='None' name='[none:longitude:qk]' pivot='key' type='quantitative' />
            <column-instance column='[neighborhood]' derivation='None' name='[none:neighborhood:nk]' pivot='key' type='nominal' />
            <column-instance column='[tip %]' derivation='Sum' name='[sum:tip %:qk]' pivot='key' type='quantitative' />
            <column caption='Tip %' datatype='real' name='[tip %]' role='measure' type='quantitative'>
            </column>
          </datasource-dependencies>
          <filter class='categorical' column='[textscan.41981.809931435186].[Exclusions (Latitude,Longitude)]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='crossjoin'>
                <groupfilter function='level-members' level='[none:latitude:qk]' />
                <groupfilter function='level-members' level='[none:longitude:qk]' />
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:latitude:qk]' member='40.873671999999999' />
                <groupfilter function='member' level='[none:longitude:qk]' member='-74.422424000000007' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[textscan.41981.809931435186].[Exclusions (Latitude,Longitude)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[textscan.41981.809931435186].[none:longitude:qk]' field-type='quantitative' max='-8170455.8722723452' min='-8297775.8233865155' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[textscan.41981.809931435186].[none:latitude:qk]' field-type='quantitative' max='5008579.1882227762' min='4940735.2911174474' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='size' field='[textscan.41981.809931435186].[sum:tip %:qk]' field-type='quantitative' max-size='1' min-size='0.0136557' type='rangesize' />
            <encoding attr='color' field='[textscan.41981.809931435186].[sum:tip %:qk]' max='0.29999999999999999' min='0.10000000000000001' palette='tableau-red-green' type='interpolated' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[textscan.41981.809931435186].[sum:tip %:qk]' />
              <lod column='[textscan.41981.809931435186].[none:neighborhood:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.73229628801345825' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[textscan.41981.809931435186].[none:latitude:qk]</rows>
        <cols>[textscan.41981.809931435186].[none:longitude:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='tip/hour'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Tip by hour</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='avg_tip_by_hour' name='textscan.41982.884052731482' />
          </datasources>
          <datasource-dependencies datasource='textscan.41982.884052731482'>
            <column caption='Hour' datatype='integer' name='[hour]' role='measure' type='quantitative'>
            </column>
            <column-instance column='[hour]' derivation='None' name='[none:hour:qk]' pivot='key' type='quantitative' />
            <column-instance column='[tip %]' derivation='None' name='[none:tip %:qk]' pivot='key' type='quantitative' />
            <column caption='Tip %' datatype='real' name='[tip %]' role='measure' type='quantitative'>
            </column>
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
          </pane>
        </panes>
        <rows>[textscan.41982.884052731482].[none:tip %:qk]</rows>
        <cols>[textscan.41982.884052731482].[none:hour:qk]</cols>
      </table>
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='pickup+tip/hr'>
      <style>
      </style>
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='50000' id='1' name='pickup/hour' show-title='true' w='100000' x='0' y='0'>
          </zone>
          <zone h='50000' id='3' name='tip/hour' show-title='true' w='100000' x='0' y='50000'>
          </zone>
        </zone>
      </zones>
    </dashboard>
  </dashboards>
  <windows>
    <window class='schema' source-height='-1' />
    <window auto-hidden='0' class='worksheet' maximized='0' name='neighborhoods'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='5' param='[textscan.41980.593389085647].[none:pickup_neighborhood:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[textscan.41980.593389085647].[:Measure Names]</field>
          <field>[textscan.41980.593389085647].[none:pickup_latitude:qk]</field>
          <field>[textscan.41980.593389085647].[none:pickup_longitude:qk]</field>
          <field>[textscan.41980.593389085647].[none:pickup_neighborhood:nk]</field>
          <field>[textscan.41980.593389085647].[none:trip_time_in_secs:qk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='mph'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='pickup/hour'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='tip (all)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[textscan.41981.809931435186].[sum:tip %:qk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[textscan.41981.809931435186].[none:neighborhood:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='tip (10k)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[textscan.41981.814407766207].[none:neighborhood:nk]</field>
          <field>[textscan.41981.815420844905].[attr:neighborhood:nk]</field>
          <field>[textscan.41981.815420844905].[none:neighborhood:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='tip (1M)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[textscan.41981.815276898145].[none:neighborhood:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='tip % (dist)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[textscan.41982.808242835650].[none:Distance:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='1' name='pay type (neigh)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[textscan.41981.857853831018].[none:pay type:nk]' type='color' />
            <card pane-specification-id='0' param='[textscan.41981.857853831018].[none:# rides:qk]' type='size' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[textscan.41981.857853831018].[none:neighborhood:nk]</field>
          <field>[textscan.41981.857853831018].[none:pay type:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='tip/hour'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
    </window>
    <window auto-hidden='0' class='dashboard' maximized='0' name='pickup+tip/hr'>
      <active id='3' />
      <zones>
        <zone name='pickup/hour'>
          <viewpoint>
            <zoom type='entire-view' />
          </viewpoint>
        </zone>
        <zone name='tip/hour'>
          <viewpoint>
            <zoom type='entire-view' />
          </viewpoint>
        </zone>
      </zones>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='pay type (time)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='type_in' param='[Parameters].[Parameter 1]' type='parameter' />
          </strip>
        </edge>
      </cards>
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='neighborhoods' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='mph' width='192'>
      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
      9ZKIzOH/AbpHE/oxoMsMAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='pickup/hour' width='192'>
      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
      AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='tip (all)' width='192'>
      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
      YSUAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='tip (10k)' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='tip (1M)' width='192'>
      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
      hSaex7DI9nEAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='tip % (dist)' width='192'>
      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
      AAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='pay type (neigh)' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='tip/hour' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='pickup+tip/hr' width='192'>
      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
      dzhwOBzj/vK/lKjAlx5BF6gAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='pay type (time)' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
