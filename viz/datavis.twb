<?xml version='1.0' encoding='utf-8' ?>

<workbook source-platform='win' version='8.3' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <!-- build 8300.14.1117.2230                                -->
  <preferences>
  </preferences>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='8.3'>
      <aliases enabled='yes' />
      <column caption='1' datatype='real' name='[Parameter 1]' param-domain-type='any' role='measure' type='quantitative' value='1.0'>
        <calculation class='tableau' formula='1.0' />
      </column>
    </datasource>
    <datasource caption='new_trip_data_1_5' inline='true' name='textscan.41980.593389085647' version='8.3'>
      <connection class='textscan' directory='C:/Users/ELin/Desktop/BigData/BigDataProject/viz' filename='new_trip_data_1_5.csv'>
        <relation name='new_trip_data_1_5#csv' table='[new_trip_data_1_5#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='medallion' ordinal='0' />
            <column datatype='string' name='hack_license' ordinal='1' />
            <column datatype='string' name='vendor_id' ordinal='2' />
            <column datatype='integer' name='rate_code' ordinal='3' />
            <column datatype='string' name='store_and_fwd_flag' ordinal='4' />
            <column datatype='datetime' name='pickup_datetime' ordinal='5' />
            <column datatype='datetime' name='dropoff_datetime' ordinal='6' />
            <column datatype='integer' name='passenger_count' ordinal='7' />
            <column datatype='integer' name='trip_time_in_secs' ordinal='8' />
            <column datatype='real' name='trip_distance' ordinal='9' />
            <column datatype='real' name='pickup_longitude' ordinal='10' />
            <column datatype='real' name='pickup_latitude' ordinal='11' />
            <column datatype='real' name='dropoff_longitude' ordinal='12' />
            <column datatype='real' name='dropoff_latitude' ordinal='13' />
            <column datatype='integer' name='pickup_postcode' ordinal='14' />
            <column datatype='string' name='pickup_neighborhood' ordinal='15' />
            <column datatype='integer' name='pickup_hour' ordinal='16' />
            <column datatype='integer' name='dropoff_postcode' ordinal='17' />
            <column datatype='string' name='dropoff_neighborhood' ordinal='18' />
            <column datatype='string' name='dropoff_hour' ordinal='19' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>medallion</remote-name>
            <remote-type>129</remote-type>
            <local-name>[medallion]</local-name>
            <parent-name>[new_trip_data_1_5#csv]</parent-name>
            <remote-alias>medallion</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>hack_license</remote-name>
            <remote-type>129</remote-type>
            <local-name>[hack_license]</local-name>
            <parent-name>[new_trip_data_1_5#csv]</parent-name>
            <remote-alias>hack_license</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>vendor_id</remote-name>
            <remote-type>129</remote-type>
            <local-name>[vendor_id]</local-name>
            <parent-name>[new_trip_data_1_5#csv]</parent-name>
            <remote-alias>vendor_id</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>rate_code</remote-name>
            <remote-type>20</remote-type>
            <local-name>[rate_code]</local-name>
            <parent-name>[new_trip_data_1_5#csv]</parent-name>
            <remote-alias>rate_code</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>store_and_fwd_flag</remote-name>
            <remote-type>129</remote-type>
            <local-name>[store_and_fwd_flag]</local-name>
            <parent-name>[new_trip_data_1_5#csv]</parent-name>
            <remote-alias>store_and_fwd_flag</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>pickup_datetime</remote-name>
            <remote-type>135</remote-type>
            <local-name>[pickup_datetime]</local-name>
            <parent-name>[new_trip_data_1_5#csv]</parent-name>
            <remote-alias>pickup_datetime</remote-alias>
            <ordinal>5</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;datetime&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>dropoff_datetime</remote-name>
            <remote-type>135</remote-type>
            <local-name>[dropoff_datetime]</local-name>
            <parent-name>[new_trip_data_1_5#csv]</parent-name>
            <remote-alias>dropoff_datetime</remote-alias>
            <ordinal>6</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;datetime&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>passenger_count</remote-name>
            <remote-type>20</remote-type>
            <local-name>[passenger_count]</local-name>
            <parent-name>[new_trip_data_1_5#csv]</parent-name>
            <remote-alias>passenger_count</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>trip_time_in_secs</remote-name>
            <remote-type>20</remote-type>
            <local-name>[trip_time_in_secs]</local-name>
            <parent-name>[new_trip_data_1_5#csv]</parent-name>
            <remote-alias>trip_time_in_secs</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>trip_distance</remote-name>
            <remote-type>5</remote-type>
            <local-name>[trip_distance]</local-name>
            <parent-name>[new_trip_data_1_5#csv]</parent-name>
            <remote-alias>trip_distance</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>pickup_longitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[pickup_longitude]</local-name>
            <parent-name>[new_trip_data_1_5#csv]</parent-name>
            <remote-alias>pickup_longitude</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>pickup_latitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[pickup_latitude]</local-name>
            <parent-name>[new_trip_data_1_5#csv]</parent-name>
            <remote-alias>pickup_latitude</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>dropoff_longitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[dropoff_longitude]</local-name>
            <parent-name>[new_trip_data_1_5#csv]</parent-name>
            <remote-alias>dropoff_longitude</remote-alias>
            <ordinal>12</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>dropoff_latitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[dropoff_latitude]</local-name>
            <parent-name>[new_trip_data_1_5#csv]</parent-name>
            <remote-alias>dropoff_latitude</remote-alias>
            <ordinal>13</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>pickup_postcode</remote-name>
            <remote-type>20</remote-type>
            <local-name>[pickup_postcode]</local-name>
            <parent-name>[new_trip_data_1_5#csv]</parent-name>
            <remote-alias>pickup_postcode</remote-alias>
            <ordinal>14</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>pickup_neighborhood</remote-name>
            <remote-type>129</remote-type>
            <local-name>[pickup_neighborhood]</local-name>
            <parent-name>[new_trip_data_1_5#csv]</parent-name>
            <remote-alias>pickup_neighborhood</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>pickup_hour</remote-name>
            <remote-type>20</remote-type>
            <local-name>[pickup_hour]</local-name>
            <parent-name>[new_trip_data_1_5#csv]</parent-name>
            <remote-alias>pickup_hour</remote-alias>
            <ordinal>16</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>dropoff_postcode</remote-name>
            <remote-type>20</remote-type>
            <local-name>[dropoff_postcode]</local-name>
            <parent-name>[new_trip_data_1_5#csv]</parent-name>
            <remote-alias>dropoff_postcode</remote-alias>
            <ordinal>17</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>dropoff_neighborhood</remote-name>
            <remote-type>129</remote-type>
            <local-name>[dropoff_neighborhood]</local-name>
            <parent-name>[new_trip_data_1_5#csv]</parent-name>
            <remote-alias>dropoff_neighborhood</remote-alias>
            <ordinal>18</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>dropoff_hour</remote-name>
            <remote-type>129</remote-type>
            <local-name>[dropoff_hour]</local-name>
            <parent-name>[new_trip_data_1_5#csv]</parent-name>
            <remote-alias>dropoff_hour</remote-alias>
            <ordinal>19</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name></remote-name>
            <remote-type>0</remote-type>
            <parent-name>[new_trip_data_1_5#csv]</parent-name>
            <remote-alias></remote-alias>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Dropoff Datetime' datatype='datetime' name='[dropoff_datetime]' role='dimension' type='ordinal'>
      </column>
      <column caption='Dropoff Hour' datatype='string' name='[dropoff_hour]' role='dimension' type='nominal'>
      </column>
      <column aggregation='Avg' caption='Dropoff Latitude' datatype='real' name='[dropoff_latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative'>
      </column>
      <column aggregation='Avg' caption='Dropoff Longitude' datatype='real' name='[dropoff_longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative'>
      </column>
      <column caption='Dropoff Neighborhood' datatype='string' name='[dropoff_neighborhood]' role='dimension' type='nominal'>
      </column>
      <column caption='Dropoff Postcode' datatype='integer' default-format='*00000' name='[dropoff_postcode]' role='dimension' semantic-role='[ZipCode].[Name]' type='ordinal'>
      </column>
      <column caption='Hack License' datatype='string' name='[hack_license]' role='dimension' type='nominal'>
      </column>
      <column caption='Medallion' datatype='string' name='[medallion]' role='dimension' type='nominal'>
      </column>
      <column caption='Passenger Count' datatype='integer' name='[passenger_count]' role='measure' type='quantitative'>
      </column>
      <column caption='Pickup Datetime' datatype='datetime' name='[pickup_datetime]' role='dimension' type='ordinal'>
      </column>
      <column caption='Pickup Hour' datatype='integer' name='[pickup_hour]' role='measure' type='quantitative'>
      </column>
      <column aggregation='Avg' caption='Pickup Latitude' datatype='real' name='[pickup_latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative'>
      </column>
      <column aggregation='Avg' caption='Pickup Longitude' datatype='real' name='[pickup_longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative'>
      </column>
      <column caption='Pickup Neighborhood' datatype='string' name='[pickup_neighborhood]' role='dimension' type='nominal'>
      </column>
      <column caption='Pickup Postcode' datatype='integer' default-format='*00000' name='[pickup_postcode]' role='dimension' semantic-role='[ZipCode].[Name]' type='ordinal'>
      </column>
      <column caption='Rate Code' datatype='integer' name='[rate_code]' role='dimension' type='ordinal'>
      </column>
      <column caption='Store And Fwd Flag' datatype='string' name='[store_and_fwd_flag]' role='dimension' type='nominal'>
      </column>
      <column caption='Trip Distance' datatype='real' name='[trip_distance]' role='measure' type='quantitative'>
      </column>
      <column caption='Trip Time In Secs' datatype='integer' name='[trip_time_in_secs]' role='measure' type='quantitative'>
      </column>
      <column caption='Vendor Id' datatype='string' name='[vendor_id]' role='dimension' type='nominal'>
      </column>
      <column-instance column='[pickup_latitude]' derivation='None' name='[none:pickup_latitude:qk]' pivot='key' type='quantitative' />
      <column-instance column='[pickup_longitude]' derivation='None' name='[none:pickup_longitude:qk]' pivot='key' type='quantitative' />
      <column-instance column='[pickup_neighborhood]' derivation='None' name='[none:pickup_neighborhood:nk]' pivot='key' type='nominal' />
      <group hidden='true' name='[Exclusions (Pickup Latitude,Pickup Longitude)]' name-style='unqualified' user:auto-column='exclude'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:pickup_latitude:qk]' />
          <groupfilter function='level-members' level='[none:pickup_longitude:qk]' />
        </groupfilter>
      </group>
      <layout dim-ordering='alphabetic' dim-percentage='0.5' measure-ordering='alphabetic' measure-percentage='0.4' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:pickup_neighborhood:nk]' type='palette'>
            <map to='#17becf'>
              <bucket>&quot;Cobble Hill Historic District&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;Fresh Pond Junction&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;Koreatown&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;Park West Village&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;Tremont&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>%null%</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Corona&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Gowanus&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Lincoln Towers&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Parkville&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Tudor City&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Battery Park City&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Downtown Brooklyn&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Greenwich Village&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Lower East Side&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Rego Park&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Upper West Side&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Chinatown&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Flushing&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Kensington&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;NoHo&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Steinway&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Brooklyn Heights&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Eastchester Houses&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Hillside&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Midwood&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;SoHo&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Woodhaven&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Brighton Beach&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;East Harlem&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Hell&apos;s Kitchen&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Melrose&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Saint George&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;West Brighton&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;Bedford-Stuyvesant&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;DUMBO&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;Haberman&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;Manhattanville&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;Richmond Hill&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;Washington Heights&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;Colgate Center&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;Fulton Houses&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;Lefrak City&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;Parkchester&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;Tribeca&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;Adelphi&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;Crown Heights&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;Gowanus Houses&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;Little Italy&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;Port Morris&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;University Heights&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Clinton Hill&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Forest Hills Gardens&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Kings Bridge&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Ozone Park&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Sunnyside&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;Brooklyn Manor&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;Elmhurst&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;Inwood&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;Morningside Heights&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;South Slope&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;Woodside&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;Broad Channel&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;East Village&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;High Bridge&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;Midtown West&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;San Juan Hill&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;Williamsburg&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Clinton&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Forest Hills&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Kew Gardens&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;North Beach&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Stuyvesant Town&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Blissville&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;East Elmhurst&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Hamilton Heights&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Marcy Houses&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Rose Hill&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Washington Square Village&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;Cobble Hill&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;Fort Greene&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;Kips Bay&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;Park Slope&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;Sunnyside Gardens&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Bushwick&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Flatbush&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Jackson Heights&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Mott Haven&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;South Street Seaport&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Wyckoff Gardens&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;Chelsea&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;Flatiron&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;Murray Hill&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;Southbridge Towers&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;Yorkville&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Alphabet City&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Diamond District&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Gravesend&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Loisaida&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Prospect Heights&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;University Village&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;Boerum Hill&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;East Flatbush&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;Harlem&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;Maspeth&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;Rosedale&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;Waterside Plaza&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;Astoria&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;Ditmas Park&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;Greenpoint&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;Long Island City&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;Red Hook&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;Upper East Side&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='top_pick_neighborhood' inline='true' name='textscan.41981.778114803237' version='8.3'>
      <connection class='textscan' directory='C:/Users/ELin/Desktop/BigData/BigDataProject/viz' filename='top_pick_neighborhood.csv'>
        <relation name='top_pick_neighborhood#csv' table='[top_pick_neighborhood#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='neighborhood' ordinal='0' />
            <column datatype='real' name='percentage' ordinal='1' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>neighborhood</remote-name>
            <remote-type>129</remote-type>
            <local-name>[neighborhood]</local-name>
            <parent-name>[top_pick_neighborhood#csv]</parent-name>
            <remote-alias>neighborhood</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>percentage</remote-name>
            <remote-type>5</remote-type>
            <local-name>[percentage]</local-name>
            <parent-name>[top_pick_neighborhood#csv]</parent-name>
            <remote-alias>percentage</remote-alias>
            <ordinal>1</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name></remote-name>
            <remote-type>0</remote-type>
            <parent-name>[top_pick_neighborhood#csv]</parent-name>
            <remote-alias></remote-alias>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Neighborhood' datatype='string' name='[neighborhood]' role='dimension' type='nominal'>
      </column>
      <column caption='Percentage' datatype='real' name='[percentage]' role='measure' type='quantitative'>
      </column>
      <column-instance column='[neighborhood]' derivation='None' name='[none:neighborhood:nk]' pivot='key' type='nominal' />
      <layout dim-ordering='alphabetic' dim-percentage='0.5' measure-ordering='alphabetic' measure-percentage='0.4' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:neighborhood:nk]' type='palette'>
            <map to='#1f77b4'>
              <bucket>%null%</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Koreatown&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Upper East Side&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;San Juan Hill&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;Lincoln Towers&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;Diamond District&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;Yorkville&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;Tudor City&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Murray Hill&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Flatiron&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;Other&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;Fulton Houses&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='top_drop_neighborhood' inline='true' name='textscan.41981.782392928239' version='8.3'>
      <connection class='textscan' directory='C:/Users/ELin/Desktop/BigData/BigDataProject/viz' filename='top_drop_neighborhood.csv'>
        <relation name='top_drop_neighborhood#csv' table='[top_drop_neighborhood#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='neighborhood' ordinal='0' />
            <column datatype='real' name='percentage' ordinal='1' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>neighborhood</remote-name>
            <remote-type>129</remote-type>
            <local-name>[neighborhood]</local-name>
            <parent-name>[top_drop_neighborhood#csv]</parent-name>
            <remote-alias>neighborhood</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>percentage</remote-name>
            <remote-type>5</remote-type>
            <local-name>[percentage]</local-name>
            <parent-name>[top_drop_neighborhood#csv]</parent-name>
            <remote-alias>percentage</remote-alias>
            <ordinal>1</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name></remote-name>
            <remote-type>0</remote-type>
            <parent-name>[top_drop_neighborhood#csv]</parent-name>
            <remote-alias></remote-alias>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Neighborhood' datatype='string' name='[neighborhood]' role='dimension' type='nominal'>
      </column>
      <column caption='Percentage' datatype='real' name='[percentage]' role='measure' type='quantitative'>
      </column>
      <column-instance column='[neighborhood]' derivation='None' name='[none:neighborhood:nk]' pivot='key' type='nominal' />
      <layout dim-ordering='alphabetic' dim-percentage='0.5' measure-ordering='alphabetic' measure-percentage='0.4' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:neighborhood:nk]' type='palette'>
            <map to='#1f77b4'>
              <bucket>%null%</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Koreatown&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Upper East Side&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;San Juan Hill&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;Lincoln Towers&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;Diamond District&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;Yorkville&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;Tudor City&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Murray Hill&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Fulton Houses&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;Other&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;Hell&apos;s Kitchen&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='avg_speed_per_hour' inline='true' name='textscan.41981.789711331017' version='8.3'>
      <connection class='textscan' directory='C:/Users/ELin/Desktop/BigData/BigDataProject/viz' filename='avg_speed_per_hour.csv'>
        <relation name='avg_speed_per_hour#csv' table='[avg_speed_per_hour#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='integer' name='hour' ordinal='0' />
            <column datatype='real' name='speed' ordinal='1' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>hour</remote-name>
            <remote-type>20</remote-type>
            <local-name>[hour]</local-name>
            <parent-name>[avg_speed_per_hour#csv]</parent-name>
            <remote-alias>hour</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>speed</remote-name>
            <remote-type>5</remote-type>
            <local-name>[speed]</local-name>
            <parent-name>[avg_speed_per_hour#csv]</parent-name>
            <remote-alias>speed</remote-alias>
            <ordinal>1</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name></remote-name>
            <remote-type>0</remote-type>
            <parent-name>[avg_speed_per_hour#csv]</parent-name>
            <remote-alias></remote-alias>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Hour' datatype='integer' name='[hour]' role='measure' type='quantitative'>
      </column>
      <column caption='Speed' datatype='real' name='[speed]' role='measure' type='quantitative'>
      </column>
      <layout dim-ordering='alphabetic' dim-percentage='0.5' measure-ordering='alphabetic' measure-percentage='0.4' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='avg_farep_neighborhood+' inline='true' name='textscan.41981.809931435186' version='8.3'>
      <connection class='textscan' directory='C:/Users/ELin/Desktop/BigData/BigDataProject/viz' filename='avg_farep_neighborhood.csv'>
        <relation join='inner' type='join'>
          <clause type='join'>
            <expression op='='>
              <expression op='[avg_farep_neighborhood#csv].[neighborhood]'>
              </expression>
              <expression op='[geolocator_data#csv].[neighborhood]'>
              </expression>
            </expression>
          </clause>
          <relation name='avg_farep_neighborhood#csv' table='[avg_farep_neighborhood#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='string' name='neighborhood' ordinal='0' />
              <column datatype='real' name='tip %' ordinal='1' />
            </columns>
          </relation>
          <relation name='geolocator_data#csv' table='[geolocator_data#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='string' name='neighborhood' ordinal='0' />
              <column datatype='real' name='longitude' ordinal='1' />
              <column datatype='real' name='latitude' ordinal='2' />
            </columns>
          </relation>
        </relation>
        <cols>
          <map key='[latitude]' value='[geolocator_data#csv].[latitude]' />
          <map key='[longitude]' value='[geolocator_data#csv].[longitude]' />
          <map key='[neighborhood (geolocator_data.csv)]' value='[geolocator_data#csv].[neighborhood]' />
          <map key='[neighborhood]' value='[avg_farep_neighborhood#csv].[neighborhood]' />
          <map key='[tip %]' value='[avg_farep_neighborhood#csv].[tip %]' />
        </cols>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>neighborhood</remote-name>
            <remote-type>129</remote-type>
            <local-name>[neighborhood]</local-name>
            <parent-name>[avg_farep_neighborhood#csv]</parent-name>
            <remote-alias>neighborhood</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>tip %</remote-name>
            <remote-type>5</remote-type>
            <local-name>[tip %]</local-name>
            <parent-name>[avg_farep_neighborhood#csv]</parent-name>
            <remote-alias>tip %</remote-alias>
            <ordinal>1</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name></remote-name>
            <remote-type>0</remote-type>
            <parent-name>[avg_farep_neighborhood#csv]</parent-name>
            <remote-alias></remote-alias>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>neighborhood</remote-name>
            <remote-type>129</remote-type>
            <local-name>[neighborhood (geolocator_data.csv)]</local-name>
            <parent-name>[geolocator_data#csv]</parent-name>
            <remote-alias>neighborhood</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>longitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[longitude]</local-name>
            <parent-name>[geolocator_data#csv]</parent-name>
            <remote-alias>longitude</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>latitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[latitude]</local-name>
            <parent-name>[geolocator_data#csv]</parent-name>
            <remote-alias>latitude</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name></remote-name>
            <remote-type>0</remote-type>
            <parent-name>[geolocator_data#csv]</parent-name>
            <remote-alias></remote-alias>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column aggregation='Avg' caption='Latitude' datatype='real' name='[latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative'>
      </column>
      <column aggregation='Avg' caption='Longitude' datatype='real' name='[longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative'>
      </column>
      <column caption='Neighborhood (Geolocator Data.Csv)' datatype='string' name='[neighborhood (geolocator_data.csv)]' role='dimension' type='nominal'>
      </column>
      <column caption='Neighborhood' datatype='string' name='[neighborhood]' role='dimension' type='nominal'>
      </column>
      <column caption='Tip %' datatype='real' name='[tip %]' role='measure' type='quantitative'>
      </column>
      <column-instance column='[latitude]' derivation='None' name='[none:latitude:qk]' pivot='key' type='quantitative' />
      <column-instance column='[longitude]' derivation='None' name='[none:longitude:qk]' pivot='key' type='quantitative' />
      <group hidden='true' name='[Exclusions (Latitude,Longitude)]' name-style='unqualified' user:auto-column='exclude'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:latitude:qk]' />
          <groupfilter function='level-members' level='[none:longitude:qk]' />
        </groupfilter>
      </group>
      <layout dim-ordering='alphabetic' dim-percentage='0.5' measure-ordering='alphabetic' measure-percentage='0.4' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='avg_farep_10k' inline='true' name='textscan.41981.814407766207' version='8.3'>
      <connection class='textscan' directory='C:/Users/ELin/Desktop/BigData/BigDataProject/viz' filename='avg_farep_10k.csv'>
        <relation name='avg_farep_10k#csv' table='[avg_farep_10k#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='neighborhood' ordinal='0' />
            <column datatype='real' name='tip %' ordinal='1' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>neighborhood</remote-name>
            <remote-type>129</remote-type>
            <local-name>[neighborhood]</local-name>
            <parent-name>[avg_farep_10k#csv]</parent-name>
            <remote-alias>neighborhood</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>tip %</remote-name>
            <remote-type>5</remote-type>
            <local-name>[tip %]</local-name>
            <parent-name>[avg_farep_10k#csv]</parent-name>
            <remote-alias>tip %</remote-alias>
            <ordinal>1</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name></remote-name>
            <remote-type>0</remote-type>
            <parent-name>[avg_farep_10k#csv]</parent-name>
            <remote-alias></remote-alias>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Neighborhood' datatype='string' name='[neighborhood]' role='dimension' type='nominal'>
      </column>
      <column caption='Tip %' datatype='real' name='[tip %]' role='measure' type='quantitative'>
      </column>
      <layout dim-ordering='alphabetic' dim-percentage='0.5' measure-ordering='alphabetic' measure-percentage='0.4' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='avg_farep_1000k' inline='true' name='textscan.41981.815276898145' version='8.3'>
      <connection class='textscan' directory='C:/Users/ELin/Desktop/BigData/BigDataProject/viz' filename='avg_farep_1000k.csv'>
        <relation name='avg_farep_1000k#csv' table='[avg_farep_1000k#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='neighborhood' ordinal='0' />
            <column datatype='real' name='tip %' ordinal='1' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>neighborhood</remote-name>
            <remote-type>129</remote-type>
            <local-name>[neighborhood]</local-name>
            <parent-name>[avg_farep_1000k#csv]</parent-name>
            <remote-alias>neighborhood</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>tip %</remote-name>
            <remote-type>5</remote-type>
            <local-name>[tip %]</local-name>
            <parent-name>[avg_farep_1000k#csv]</parent-name>
            <remote-alias>tip %</remote-alias>
            <ordinal>1</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name></remote-name>
            <remote-type>0</remote-type>
            <parent-name>[avg_farep_1000k#csv]</parent-name>
            <remote-alias></remote-alias>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Neighborhood' datatype='string' name='[neighborhood]' role='dimension' type='nominal'>
      </column>
      <column caption='Tip %' datatype='real' name='[tip %]' role='measure' type='quantitative'>
      </column>
      <layout dim-ordering='alphabetic' dim-percentage='0.5' measure-ordering='alphabetic' measure-percentage='0.4' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='payment_type_neighborhood+' inline='true' name='textscan.41981.857853831018' version='8.3'>
      <connection class='textscan' directory='C:/Users/ELin/Desktop/BigData/BigDataProject/viz' filename='payment_type_neighborhood.csv'>
        <relation join='inner' type='join'>
          <clause type='join'>
            <expression op='='>
              <expression op='[payment_type_neighborhood#csv].[neighborhood]'>
              </expression>
              <expression op='[geolocator_data#csv].[neighborhood]'>
              </expression>
            </expression>
          </clause>
          <relation name='payment_type_neighborhood#csv' table='[payment_type_neighborhood#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='string' name='neighborhood' ordinal='0' />
              <column datatype='string' name='pay type' ordinal='1' />
              <column datatype='integer' name='# rides' ordinal='2' />
            </columns>
          </relation>
          <relation name='geolocator_data#csv' table='[geolocator_data#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='string' name='neighborhood' ordinal='0' />
              <column datatype='real' name='longitude' ordinal='1' />
              <column datatype='real' name='latitude' ordinal='2' />
            </columns>
          </relation>
        </relation>
        <cols>
          <map key='[# rides]' value='[payment_type_neighborhood#csv].[# rides]' />
          <map key='[latitude]' value='[geolocator_data#csv].[latitude]' />
          <map key='[longitude]' value='[geolocator_data#csv].[longitude]' />
          <map key='[neighborhood (geolocator_data.csv)]' value='[geolocator_data#csv].[neighborhood]' />
          <map key='[neighborhood]' value='[payment_type_neighborhood#csv].[neighborhood]' />
          <map key='[pay type]' value='[payment_type_neighborhood#csv].[pay type]' />
        </cols>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>neighborhood</remote-name>
            <remote-type>129</remote-type>
            <local-name>[neighborhood]</local-name>
            <parent-name>[payment_type_neighborhood#csv]</parent-name>
            <remote-alias>neighborhood</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>pay type</remote-name>
            <remote-type>129</remote-type>
            <local-name>[pay type]</local-name>
            <parent-name>[payment_type_neighborhood#csv]</parent-name>
            <remote-alias>pay type</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name># rides</remote-name>
            <remote-type>20</remote-type>
            <local-name>[# rides]</local-name>
            <parent-name>[payment_type_neighborhood#csv]</parent-name>
            <remote-alias># rides</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name></remote-name>
            <remote-type>0</remote-type>
            <parent-name>[payment_type_neighborhood#csv]</parent-name>
            <remote-alias></remote-alias>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>neighborhood</remote-name>
            <remote-type>129</remote-type>
            <local-name>[neighborhood (geolocator_data.csv)]</local-name>
            <parent-name>[geolocator_data#csv]</parent-name>
            <remote-alias>neighborhood</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>longitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[longitude]</local-name>
            <parent-name>[geolocator_data#csv]</parent-name>
            <remote-alias>longitude</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>latitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[latitude]</local-name>
            <parent-name>[geolocator_data#csv]</parent-name>
            <remote-alias>latitude</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name></remote-name>
            <remote-type>0</remote-type>
            <parent-name>[geolocator_data#csv]</parent-name>
            <remote-alias></remote-alias>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='# Rides' datatype='integer' name='[# rides]' role='measure' type='quantitative'>
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column aggregation='Avg' caption='Latitude' datatype='real' name='[latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative'>
      </column>
      <column aggregation='Avg' caption='Longitude' datatype='real' name='[longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative'>
      </column>
      <column caption='Neighborhood (Geolocator Data.Csv)' datatype='string' name='[neighborhood (geolocator_data.csv)]' role='dimension' type='nominal'>
      </column>
      <column caption='Neighborhood' datatype='string' name='[neighborhood]' role='dimension' type='nominal'>
      </column>
      <column caption='Pay Type' datatype='string' name='[pay type]' role='dimension' type='nominal'>
      </column>
      <layout dim-ordering='alphabetic' dim-percentage='0.5' measure-ordering='alphabetic' measure-percentage='0.4' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='payment_type_neighborhood' inline='true' name='textscan.41981.899219826388' version='8.3'>
      <connection class='textscan' directory='C:/Users/ELin/Desktop/BigData/BigDataProject/viz' filename='payment_type_neighborhood.csv'>
        <relation name='payment_type_time#csv' table='[payment_type_time#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='integer' name='hour' ordinal='0' />
            <column datatype='real' name='card/cash ratio' ordinal='1' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>hour</remote-name>
            <remote-type>20</remote-type>
            <local-name>[hour]</local-name>
            <parent-name>[payment_type_time#csv]</parent-name>
            <remote-alias>hour</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>card/cash ratio</remote-name>
            <remote-type>5</remote-type>
            <local-name>[card/cash ratio]</local-name>
            <parent-name>[payment_type_time#csv]</parent-name>
            <remote-alias>card/cash ratio</remote-alias>
            <ordinal>1</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name></remote-name>
            <remote-type>0</remote-type>
            <parent-name>[payment_type_time#csv]</parent-name>
            <remote-alias></remote-alias>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='# Rides' datatype='integer' name='[# rides]' role='measure' type='quantitative'>
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Hour' datatype='integer' name='[hour]' role='measure' type='quantitative'>
      </column>
      <column caption='Pay Type' datatype='string' name='[pay type]' role='dimension' type='nominal'>
      </column>
      <layout dim-ordering='alphabetic' dim-percentage='0.5' measure-ordering='alphabetic' measure-percentage='0.4' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='payment_type_time' inline='true' name='textscan.41981.907503576389' version='8.3'>
      <connection class='textscan' directory='C:/Users/ELin/Desktop/BigData/BigDataProject/viz' filename='payment_type_time.csv'>
        <relation name='payment_type_time#csv' table='[payment_type_time#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='integer' name='hour' ordinal='0' />
            <column datatype='real' name='card/cash ratio' ordinal='1' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>hour</remote-name>
            <remote-type>20</remote-type>
            <local-name>[hour]</local-name>
            <parent-name>[payment_type_time#csv]</parent-name>
            <remote-alias>hour</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>card/cash ratio</remote-name>
            <remote-type>5</remote-type>
            <local-name>[card/cash ratio]</local-name>
            <parent-name>[payment_type_time#csv]</parent-name>
            <remote-alias>card/cash ratio</remote-alias>
            <ordinal>1</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name></remote-name>
            <remote-type>0</remote-type>
            <parent-name>[payment_type_time#csv]</parent-name>
            <remote-alias></remote-alias>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Card/Cash Ratio' datatype='real' name='[card/cash ratio]' role='measure' type='quantitative'>
      </column>
      <column caption='Hour' datatype='integer' name='[hour]' role='measure' type='quantitative'>
      </column>
      <layout dim-ordering='alphabetic' dim-percentage='0.5' measure-ordering='alphabetic' measure-percentage='0.4' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='avg_farep_100k' inline='true' name='textscan.41981.815420844905' version='8.3'>
      <connection class='textscan' directory='C:/Users/ELin/Desktop/BigData/BigDataProject/viz' filename='avg_farep_100k.csv'>
        <relation name='avg_farep_100k#csv' table='[avg_farep_100k#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='neighborhood' ordinal='0' />
            <column datatype='real' name='percentage' ordinal='1' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>neighborhood</remote-name>
            <remote-type>129</remote-type>
            <local-name>[neighborhood]</local-name>
            <parent-name>[avg_farep_100k#csv]</parent-name>
            <remote-alias>neighborhood</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>percentage</remote-name>
            <remote-type>5</remote-type>
            <local-name>[percentage]</local-name>
            <parent-name>[avg_farep_100k#csv]</parent-name>
            <remote-alias>percentage</remote-alias>
            <ordinal>1</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name></remote-name>
            <remote-type>0</remote-type>
            <parent-name>[avg_farep_100k#csv]</parent-name>
            <remote-alias></remote-alias>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Neighborhood' datatype='string' name='[neighborhood]' role='dimension' type='nominal'>
      </column>
      <column caption='Percentage' datatype='real' name='[percentage]' role='measure' type='quantitative'>
      </column>
      <column-instance column='[neighborhood]' derivation='None' name='[none:neighborhood:nk]' pivot='key' type='nominal' />
      <column-instance column='[percentage]' derivation='Sum' name='[sum:percentage:qk]' pivot='key' type='quantitative' />
      <layout dim-ordering='alphabetic' dim-percentage='0.5' measure-ordering='alphabetic' measure-percentage='0.4' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#1f77b4'>
              <bucket>&quot;[textscan.41981.815420844905].[sum:percentage:qk]&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;[textscan.41981.815276898145].[attr:tip \%:qk]&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;[textscan.41981.815276898145].[sum:tip \%:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:neighborhood:nk]' type='palette'>
            <map to='#17becf'>
              <bucket>&quot;Loisaida&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;Washington Square Village&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>%null%</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Alphabet City&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Midtown West&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Yorkville&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Clinton&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;North Beach&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Kips Bay&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Tudor City&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Fulton Houses&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;South Street Seaport&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;East Village&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;San Juan Hill&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;Diamond District&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;Park West Village&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;Lower East Side&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;Williamsburg&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;Battery Park City&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;Morningside Heights&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Lincoln Towers&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Upper East Side&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;Greenwich Village&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;Southbridge Towers&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;Flatiron&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;SoHo&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Koreatown&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;University Village&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;East Elmhurst&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Rochdale Village&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;Little Italy&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;Upper West Side&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Harlem&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Stuyvesant Town&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;Hell&apos;s Kitchen&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;Tribeca&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Chelsea&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Murray Hill&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;East Harlem&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;Rose Hill&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;Chinatown&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;NoHo&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <datasource-dependencies datasource='textscan.41981.815276898145'>
        <column-instance column='[tip %]' derivation='Sum' name='[sum:tip %:qk]' pivot='key' type='quantitative' />
        <column caption='Tip %' datatype='real' name='[tip %]' role='measure' type='quantitative'>
        </column>
      </datasource-dependencies>
    </datasource>
    <datasource caption='tip_by_distance' inline='true' name='textscan.41982.808242835650' version='8.3'>
      <connection class='textscan' directory='C:/Users/ELin/Desktop/BigData/BigDataProject/viz' filename='tip_by_distance.csv'>
        <relation name='tip_by_distance#csv' table='[tip_by_distance#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='Distance' ordinal='0' />
            <column datatype='real' name='Tip %' ordinal='1' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Distance</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Distance]</local-name>
            <parent-name>[tip_by_distance#csv]</parent-name>
            <remote-alias>Distance</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Tip %</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Tip %]</local-name>
            <parent-name>[tip_by_distance#csv]</parent-name>
            <remote-alias>Tip %</remote-alias>
            <ordinal>1</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name></remote-name>
            <remote-type>0</remote-type>
            <parent-name>[tip_by_distance#csv]</parent-name>
            <remote-alias></remote-alias>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <layout dim-ordering='alphabetic' dim-percentage='0.5' measure-ordering='alphabetic' measure-percentage='0.4' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='count_by_pickup_hour' inline='true' name='textscan.41982.874145752314' version='8.3'>
      <connection class='textscan' directory='C:/Users/ELin/Desktop/BigData/BigDataProject/viz' filename='count_by_pickup_hour.csv'>
        <relation name='count_by_pickup_hour#csv' table='[count_by_pickup_hour#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='integer' name='Hour' ordinal='0' />
            <column datatype='real' name='Percent' ordinal='1' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Hour</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Hour]</local-name>
            <parent-name>[count_by_pickup_hour#csv]</parent-name>
            <remote-alias>Hour</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Percent</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Percent]</local-name>
            <parent-name>[count_by_pickup_hour#csv]</parent-name>
            <remote-alias>Percent</remote-alias>
            <ordinal>1</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name></remote-name>
            <remote-type>0</remote-type>
            <parent-name>[count_by_pickup_hour#csv]</parent-name>
            <remote-alias></remote-alias>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <layout dim-ordering='alphabetic' dim-percentage='0.5' measure-ordering='alphabetic' measure-percentage='0.4' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='avg_tip_by_hour' inline='true' name='textscan.41982.884052731482' version='8.3'>
      <connection class='textscan' directory='C:/Users/ELin/Desktop/BigData/BigDataProject/viz' filename='avg_tip_by_hour.csv'>
        <relation name='avg_tip_by_hour#csv' table='[avg_tip_by_hour#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='integer' name='hour' ordinal='0' />
            <column datatype='real' name='tip %' ordinal='1' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>hour</remote-name>
            <remote-type>20</remote-type>
            <local-name>[hour]</local-name>
            <parent-name>[avg_tip_by_hour#csv]</parent-name>
            <remote-alias>hour</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>tip %</remote-name>
            <remote-type>5</remote-type>
            <local-name>[tip %]</local-name>
            <parent-name>[avg_tip_by_hour#csv]</parent-name>
            <remote-alias>tip %</remote-alias>
            <ordinal>1</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name></remote-name>
            <remote-type>0</remote-type>
            <parent-name>[avg_tip_by_hour#csv]</parent-name>
            <remote-alias></remote-alias>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Hour' datatype='integer' name='[hour]' role='measure' type='quantitative'>
      </column>
      <column caption='Tip %' datatype='real' name='[tip %]' role='measure' type='quantitative'>
      </column>
      <layout dim-ordering='alphabetic' dim-percentage='0.5' measure-ordering='alphabetic' measure-percentage='0.4' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='mph'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Average speed per hour (mph)</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='avg_speed_per_hour' name='textscan.41981.789711331017' />
          </datasources>
          <datasource-dependencies datasource='textscan.41981.789711331017'>
            <column caption='Hour' datatype='integer' name='[hour]' role='measure' type='quantitative'>
            </column>
            <column-instance column='[hour]' derivation='None' name='[none:hour:qk]' pivot='key' type='quantitative' />
            <column-instance column='[speed]' derivation='None' name='[none:speed:qk]' pivot='key' type='quantitative' />
            <column caption='Speed' datatype='real' name='[speed]' role='measure' type='quantitative'>
            </column>
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
          </pane>
        </panes>
        <rows>[textscan.41981.789711331017].[none:speed:qk]</rows>
        <cols>[textscan.41981.789711331017].[none:hour:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='neighborhoods'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Pickup neighborhoods</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='new_trip_data_1_5' name='textscan.41980.593389085647' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='textscan.41980.593389085647'>
            <column-instance column='[pickup_latitude]' derivation='None' name='[none:pickup_latitude:qk]' pivot='key' type='quantitative' />
            <column-instance column='[pickup_longitude]' derivation='None' name='[none:pickup_longitude:qk]' pivot='key' type='quantitative' />
            <column-instance column='[pickup_neighborhood]' derivation='None' name='[none:pickup_neighborhood:nk]' pivot='key' type='nominal' />
            <column aggregation='Avg' caption='Pickup Latitude' datatype='real' name='[pickup_latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative'>
            </column>
            <column aggregation='Avg' caption='Pickup Longitude' datatype='real' name='[pickup_longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative'>
            </column>
            <column caption='Pickup Neighborhood' datatype='string' name='[pickup_neighborhood]' role='dimension' type='nominal'>
            </column>
          </datasource-dependencies>
          <filter class='categorical' column='[textscan.41980.593389085647].[none:pickup_neighborhood:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:pickup_neighborhood:nk]' />
              <groupfilter function='member' level='[none:pickup_neighborhood:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <slices>
            <column>[textscan.41980.593389085647].[none:pickup_neighborhood:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[textscan.41980.593389085647].[none:pickup_longitude:qk]' field-type='quantitative' max='-8217621.6037063366' min='-8244351.7591888709' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[textscan.41980.593389085647].[none:pickup_latitude:qk]' field-type='quantitative' max='4986034.227692375' min='4971790.7575818654' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane id='5'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[textscan.41980.593389085647].[none:pickup_neighborhood:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
                <format attr='size' value='0.38381215929985046' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[textscan.41980.593389085647].[none:pickup_latitude:qk]</rows>
        <cols>[textscan.41980.593389085647].[none:pickup_longitude:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='pay type (neigh)'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Payment type by neighborhood</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='payment_type_neighborhood+' name='textscan.41981.857853831018' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='textscan.41981.857853831018'>
            <column caption='# Rides' datatype='integer' name='[# rides]' role='measure' type='quantitative'>
            </column>
            <column aggregation='Avg' caption='Latitude' datatype='real' name='[latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative'>
            </column>
            <column aggregation='Avg' caption='Longitude' datatype='real' name='[longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative'>
            </column>
            <column caption='Neighborhood' datatype='string' name='[neighborhood]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[# rides]' derivation='None' name='[none:# rides:qk]' pivot='key' type='quantitative' />
            <column-instance column='[latitude]' derivation='None' name='[none:latitude:qk]' pivot='key' type='quantitative' />
            <column-instance column='[longitude]' derivation='None' name='[none:longitude:qk]' pivot='key' type='quantitative' />
            <column-instance column='[neighborhood]' derivation='None' name='[none:neighborhood:nk]' pivot='key' type='nominal' />
            <column-instance column='[pay type]' derivation='None' name='[none:pay type:nk]' pivot='key' type='nominal' />
            <column caption='Pay Type' datatype='string' name='[pay type]' role='dimension' type='nominal'>
            </column>
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[textscan.41981.857853831018].[none:longitude:qk]' field-type='quantitative' max='-8205604.7555143479' min='-8269264.7310714368' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[textscan.41981.857853831018].[none:latitude:qk]' field-type='quantitative' max='4992994.4130506674' min='4959072.4644980067' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='size' field='[textscan.41981.857853831018].[none:# rides:qk]' field-type='quantitative' max-size='1' min-size='0.997814' type='rangesize' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <encodings>
              <color column='[textscan.41981.857853831018].[none:pay type:nk]' />
              <size column='[textscan.41981.857853831018].[none:# rides:qk]' />
              <lod column='[textscan.41981.857853831018].[none:neighborhood:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.87970370054244995' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[textscan.41981.857853831018].[none:latitude:qk]</rows>
        <cols>[textscan.41981.857853831018].[none:longitude:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='pay type (time)'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Card/cash ratio by time</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='payment_type_time' name='textscan.41981.907503576389' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='1' datatype='real' name='[Parameter 1]' param-domain-type='any' role='measure' type='quantitative' value='1.0'>
              <calculation class='tableau' formula='1.0' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='textscan.41981.907503576389'>
            <column caption='Card/Cash Ratio' datatype='real' name='[card/cash ratio]' role='measure' type='quantitative'>
            </column>
            <column caption='Hour' datatype='integer' name='[hour]' role='measure' type='quantitative'>
            </column>
            <column-instance column='[card/cash ratio]' derivation='None' name='[none:card/cash ratio:qk]' pivot='key' type='quantitative' />
            <column-instance column='[hour]' derivation='None' name='[none:hour:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='subtitle' class='0' field='[textscan.41981.907503576389].[none:hour:qk]' scope='cols' value='' />
            <format attr='auto-subtitle' class='0' field='[textscan.41981.907503576389].[none:hour:qk]' scope='cols' value='true' />
            <encoding attr='space' class='0' field='[textscan.41981.907503576389].[none:hour:qk]' field-type='quantitative' max='25' min='0' range-type='fixed' scope='cols' type='space' />
            <format attr='width' field='[textscan.41981.907503576389].[none:card/cash ratio:qk]' value='48' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <reference-line axis-column='[textscan.41981.907503576389].[none:card/cash ratio:qk]' formula='average' id='refline0' label-type='automatic' scope='per-pane' value-column='[Parameters].[Parameter 1]' z-order='1' />
          </pane>
        </panes>
        <rows>[textscan.41981.907503576389].[none:card/cash ratio:qk]</rows>
        <cols>[textscan.41981.907503576389].[none:hour:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='pickup/hour'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Pickups by hour</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='count_by_pickup_hour' name='textscan.41982.874145752314' />
          </datasources>
          <datasource-dependencies datasource='textscan.41982.874145752314'>
            <column datatype='integer' name='[Hour]' role='measure' type='quantitative'>
            </column>
            <column datatype='real' name='[Percent]' role='measure' type='quantitative'>
            </column>
            <column-instance column='[Hour]' derivation='None' name='[none:Hour:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Percent]' derivation='None' name='[none:Percent:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
          </pane>
        </panes>
        <rows>[textscan.41982.874145752314].[none:Percent:qk]</rows>
        <cols>[textscan.41982.874145752314].[none:Hour:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='tip % (dist)'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Tip % by distance</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='tip_by_distance' name='textscan.41982.808242835650' />
          </datasources>
          <datasource-dependencies datasource='textscan.41982.808242835650'>
            <column datatype='string' name='[Distance]' role='dimension' type='nominal'>
            </column>
            <column datatype='real' name='[Tip %]' role='measure' type='quantitative'>
            </column>
            <column-instance column='[Distance]' derivation='None' name='[none:Distance:nk]' pivot='key' type='nominal' />
            <column-instance column='[Tip %]' derivation='None' name='[none:Tip %:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
          </pane>
        </panes>
        <rows>[textscan.41982.808242835650].[none:Tip %:qk]</rows>
        <cols>[textscan.41982.808242835650].[none:Distance:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='tip (10k)'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Tip % with &gt; 10k points of data per neighborhood</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='avg_farep_10k' name='textscan.41981.814407766207' />
          </datasources>
          <datasource-dependencies datasource='textscan.41981.814407766207'>
            <column caption='Neighborhood' datatype='string' name='[neighborhood]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[neighborhood]' derivation='None' name='[none:neighborhood:nk]' pivot='key' type='nominal' />
            <column-instance column='[tip %]' derivation='Sum' name='[sum:tip %:qk]' pivot='key' type='quantitative' />
            <column caption='Tip %' datatype='real' name='[tip %]' role='measure' type='quantitative'>
            </column>
          </datasource-dependencies>
          <sort class='computed' column='[textscan.41981.814407766207].[none:neighborhood:nk]' direction='DESC' using='[textscan.41981.814407766207].[sum:tip %:qk]'>
          </sort>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='subtitle' class='0' field='[textscan.41981.814407766207].[sum:tip %:qk]' scope='cols' value='' />
            <format attr='auto-subtitle' class='0' field='[textscan.41981.814407766207].[sum:tip %:qk]' scope='cols' value='true' />
            <encoding attr='space' class='0' domain-expand='false' field='[textscan.41981.814407766207].[sum:tip %:qk]' field-type='quantitative' scope='cols' type='space' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[textscan.41981.814407766207].[none:neighborhood:nk]' value='228' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-size' field='[textscan.41981.814407766207].[none:neighborhood:nk]' value='12' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <style>
              <style-rule element='datalabel'>
                <format attr='font-size' value='16' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='size' value='1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[textscan.41981.814407766207].[none:neighborhood:nk]</rows>
        <cols>[textscan.41981.814407766207].[sum:tip %:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='tip (1M)'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Tip % with &gt; 1M points of data per neighborhood</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='avg_farep_1000k' name='textscan.41981.815276898145' />
          </datasources>
          <datasource-dependencies datasource='textscan.41981.815276898145'>
            <column caption='Neighborhood' datatype='string' name='[neighborhood]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[neighborhood]' derivation='None' name='[none:neighborhood:nk]' pivot='key' type='nominal' />
            <column-instance column='[tip %]' derivation='Sum' name='[sum:tip %:qk]' pivot='key' type='quantitative' />
            <column caption='Tip %' datatype='real' name='[tip %]' role='measure' type='quantitative'>
            </column>
          </datasource-dependencies>
          <sort class='computed' column='[textscan.41981.815276898145].[none:neighborhood:nk]' direction='DESC' using='[textscan.41981.815276898145].[sum:tip %:qk]'>
          </sort>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='subtitle' class='0' field='[textscan.41981.815276898145].[sum:tip %:qk]' scope='cols' value='' />
            <format attr='auto-subtitle' class='0' field='[textscan.41981.815276898145].[sum:tip %:qk]' scope='cols' value='true' />
            <encoding attr='space' class='0' domain-expand='false' field='[textscan.41981.815276898145].[sum:tip %:qk]' field-type='quantitative' scope='cols' type='space' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-size' field='[textscan.41981.815276898145].[none:neighborhood:nk]' value='12' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
          </pane>
        </panes>
        <rows>[textscan.41981.815276898145].[none:neighborhood:nk]</rows>
        <cols>[textscan.41981.815276898145].[sum:tip %:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='tip (all)'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Map of all tips</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='avg_farep_neighborhood+' name='textscan.41981.809931435186' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='textscan.41981.809931435186'>
            <column aggregation='Avg' caption='Latitude' datatype='real' name='[latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative'>
            </column>
            <column aggregation='Avg' caption='Longitude' datatype='real' name='[longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative'>
            </column>
            <column caption='Neighborhood' datatype='string' name='[neighborhood]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[latitude]' derivation='None' name='[none:latitude:qk]' pivot='key' type='quantitative' />
            <column-instance column='[longitude]' derivation='None' name='[none:longitude:qk]' pivot='key' type='quantitative' />
            <column-instance column='[neighborhood]' derivation='None' name='[none:neighborhood:nk]' pivot='key' type='nominal' />
            <column-instance column='[tip %]' derivation='Sum' name='[sum:tip %:qk]' pivot='key' type='quantitative' />
            <column caption='Tip %' datatype='real' name='[tip %]' role='measure' type='quantitative'>
            </column>
          </datasource-dependencies>
          <filter class='categorical' column='[textscan.41981.809931435186].[Exclusions (Latitude,Longitude)]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='crossjoin'>
                <groupfilter function='level-members' level='[none:latitude:qk]' />
                <groupfilter function='level-members' level='[none:longitude:qk]' />
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:latitude:qk]' member='40.873671999999999' />
                <groupfilter function='member' level='[none:longitude:qk]' member='-74.422424000000007' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[textscan.41981.809931435186].[Exclusions (Latitude,Longitude)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[textscan.41981.809931435186].[none:longitude:qk]' field-type='quantitative' max='-8170455.8722723452' min='-8297775.8233865155' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[textscan.41981.809931435186].[none:latitude:qk]' field-type='quantitative' max='5008579.1882227762' min='4940735.2911174474' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='size' field='[textscan.41981.809931435186].[sum:tip %:qk]' field-type='quantitative' max-size='1' min-size='0.0136557' type='rangesize' />
            <encoding attr='color' field='[textscan.41981.809931435186].[sum:tip %:qk]' max='0.29999999999999999' min='0.10000000000000001' palette='tableau-red-green' type='interpolated' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[textscan.41981.809931435186].[sum:tip %:qk]' />
              <lod column='[textscan.41981.809931435186].[none:neighborhood:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.73229628801345825' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[textscan.41981.809931435186].[none:latitude:qk]</rows>
        <cols>[textscan.41981.809931435186].[none:longitude:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='tip/hour'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Tip by hour</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='avg_tip_by_hour' name='textscan.41982.884052731482' />
          </datasources>
          <datasource-dependencies datasource='textscan.41982.884052731482'>
            <column caption='Hour' datatype='integer' name='[hour]' role='measure' type='quantitative'>
            </column>
            <column-instance column='[hour]' derivation='None' name='[none:hour:qk]' pivot='key' type='quantitative' />
            <column-instance column='[tip %]' derivation='None' name='[none:tip %:qk]' pivot='key' type='quantitative' />
            <column caption='Tip %' datatype='real' name='[tip %]' role='measure' type='quantitative'>
            </column>
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
          </pane>
        </panes>
        <rows>[textscan.41982.884052731482].[none:tip %:qk]</rows>
        <cols>[textscan.41982.884052731482].[none:hour:qk]</cols>
      </table>
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='pickup+tip/hr'>
      <style>
      </style>
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='50000' id='1' name='pickup/hour' show-title='true' w='100000' x='0' y='0'>
          </zone>
          <zone h='50000' id='3' name='tip/hour' show-title='true' w='100000' x='0' y='50000'>
          </zone>
        </zone>
      </zones>
    </dashboard>
  </dashboards>
  <windows>
    <window class='schema' source-height='-1' />
    <window auto-hidden='0' class='worksheet' maximized='0' name='neighborhoods'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='5' param='[textscan.41980.593389085647].[none:pickup_neighborhood:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[textscan.41980.593389085647].[:Measure Names]</field>
          <field>[textscan.41980.593389085647].[none:pickup_latitude:qk]</field>
          <field>[textscan.41980.593389085647].[none:pickup_longitude:qk]</field>
          <field>[textscan.41980.593389085647].[none:pickup_neighborhood:nk]</field>
          <field>[textscan.41980.593389085647].[none:trip_time_in_secs:qk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='mph'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='pickup/hour'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='1' name='tip (all)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[textscan.41981.809931435186].[sum:tip %:qk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[textscan.41981.809931435186].[none:neighborhood:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='tip (10k)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[textscan.41981.814407766207].[none:neighborhood:nk]</field>
          <field>[textscan.41981.815420844905].[attr:neighborhood:nk]</field>
          <field>[textscan.41981.815420844905].[none:neighborhood:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='tip (1M)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[textscan.41981.815276898145].[none:neighborhood:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='tip % (dist)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[textscan.41982.808242835650].[none:Distance:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='pay type (neigh)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[textscan.41981.857853831018].[none:pay type:nk]' type='color' />
            <card pane-specification-id='0' param='[textscan.41981.857853831018].[none:# rides:qk]' type='size' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[textscan.41981.857853831018].[none:neighborhood:nk]</field>
          <field>[textscan.41981.857853831018].[none:pay type:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='tip/hour'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
    </window>
    <window auto-hidden='0' class='dashboard' maximized='0' name='pickup+tip/hr'>
      <active id='3' />
      <zones>
        <zone name='pickup/hour'>
          <viewpoint>
            <zoom type='entire-view' />
          </viewpoint>
        </zone>
        <zone name='tip/hour'>
          <viewpoint>
            <zoom type='entire-view' />
          </viewpoint>
        </zone>
      </zones>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='pay type (time)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='type_in' param='[Parameters].[Parameter 1]' type='parameter' />
          </strip>
        </edge>
      </cards>
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='neighborhoods' width='192'>
      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
      /nHzeZT+P32I9kM0KaDmAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='mph' width='192'>
      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
      3kNHAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='pickup/hour' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='tip (all)' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='tip (10k)' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7EAAAOxAGVKw4b
      AAAgAElEQVR4nOydd2BU15m3n+mjGY167xUJBAhE75jmgo17+dwdx8k6xV4nm81mk+w6m2Sz
      m7gkWfdubIyppvfeQYAa6r13aXq95ftDGINjEjsBJKF5/oGruXPa3N8957znnPdVyLIs48fP
      CEU52AXw42cw8QvAz4jGLwA/Ixq/APyMaPwC8DOi8QvAz4jGLwA/Ixq/APyMaPwC8DOiUV98
      IQjCYJXDj59B4RIBeDwe/Dsjrh5OpxO9Xo9S6e94hwqXCMBoNA5WOb4Rsujj2I617Dh+Dlkd
      yANPPMXY5IgvPpclXvjtL3n4+78kNlT/1YlIAjtXrSF76R0kBwX8xce2rno+/Ggl7T02EnJm
      8fgDtxCgvsyDK4lsWbuKiTfeQXyw4bLlliQJo9GISqX6RvX1c/VQ/+1bhh6W9gp2nO3mZ//5
      X7SVnsQtS/S3VvLRJ+sQAhN59OF7cTkdCIKHTR+9R7VZhaxS8+17FvPJRyswy0Hce/NU1u7c
      RZpLx+2jjazbnU/u/FtZNncCILJ/4xqSZ93L0xNj2X/4JKLPybrlH1DRI3LfI49RsfcTms0C
      Fo+Gu5ZMYMP2XVS6jCxOU7PxQAGTF95OpraD9fsLiB09k4dvnT3YzebnKxiWfbGjtwNtRAIB
      ahUZE2YyNiWKzWs/YfyNDzM7SWDN7nwA7M1FHGlQ8NCd82lsaMbc20loYibOliIavBFMTEtl
      2eJJrFi9gcCgALasWEmvAEgCbR0WkpJiUekCWbRoIZbKo+wqakbr7WbVxv20NjeSOXMpKao2
      6t2R5GSksnR+LivXbiLQqGftx5/S2deJEJrF/TdOQzG4TebnMgzLHiAoJhl32zp67E4aT+3C
      EjIWWZKQJRlJ5sLDJjMwn5GlgX+ri07Raosg1KQHFCgUEj6fCOoAps2aS1RMKwYloNCQlhpF
      SXEFmcYk1ny2k7zMEEKik5kzOwOzMobGY2cIDQnGZQhAkkEpS/hEAaUmkGmz5xIV34FWYSM4
      JBStRjMo7eTnbzMsewBTVAaP3zGTd//0Aocq+shOjWPp3Q9SunclJ1o13LN4CilpmYQlZBHp
      q2PFZ/uRlQrSc/IQuuoITx9PgFbF+LwsDh0o5L47l7Bv506C41MJUAIKJfPvfARdZz4v/Olt
      QpKyyZ66kCkxEvtOlpORnkx8YiomvYbwuGTCgoxMGJ/B/qOl3LvsBvbv2k14UjqhYdHER4YM
      dnP5+SsorucDMYK7nzdfeplmm0DGpAU8cfdCVIrBG4xYrVb/JHiIcV0LYKjhF8DQY1gOgUTB
      Q2+fhc+l63U5MFud3ygNh7Ufh9v3lZ/53A76z6fnsluwu776PhDp7elFlL5R1n6GEMNSAOaO
      Ml589ZML1z3NFRwvqv5GaexZ/Q4Hipu+8rOmgt289dlBAPJ3fsLus42XSaWfl3/zEn3ub5S1
      nyHEsLQCfRl7bxs1jVq2VG/neLOIo6+bB773Uzxl29l2opLY7Jl867aJvPn6O/Q6BObf+eh5
      +5CbF//9WVzGKPpsEj/+6b8QHzqwKOay9FJfX0+32Y4yRmTPp2+xu6CaoJQp3J6j5s11x5gw
      Zypuaxev/v4/kQ1xPPude9i4/C2q2m2MmrqEvOAO3t58hsnzbuWxO+YNZhP5uQzDsgf4MpIk
      IogSoiiQt/Be7pmbTcW5QvYda+S5X/2KexdPofTkfsInLOX5f3uCI5u24xLPf1eh5s7Hf0iW
      yU1rv+1Cmt1NVezZs4fS2laQRZQBwcRFBNFUU4dbEknOnc/jd91AQFAMT//434j3tXDq5GFa
      VBk8//PnaDi6n15BIG3SYh5dNse/DjBEGbYC8DnMlJeXUV5RifuiPXx6vR61RoOs1hEcIFBa
      VMLRI8dRG4JprS2nqOAc2rBwPt/VoFAq0Wl1qNUqLrYGJI2bwVNPPcX8SVmIjj52HThBavZo
      dOqBR1mnD0ClVOC291FSVEy7zUdERAT2znqKS87h0RkJUCjQ+ff+DGlUzz///PODXYhvjCzh
      NPfR0t5OZ1c3CemjCQkNJyEqmLDYVMKNGgIjkpk3YzSlRWUkjclj8uQ8Anw91HeL3HPvMoxq
      CI9NIjhAS1JaJjqlSExSGsEGLbIkogkMIyUuAlEUCI7NYHRiEA4CGZ0YR3xKEqbgSJJiQxF9
      Ej6PncwpNzAtbwLJoQrK6rtYeuddRAXqCAiJJjE6FBjYbKjVav2CGEL4zaDXEL8ZdOjhfxX5
      GdGMCAGIPjcFp45w5MgR8gvK8F2mz5MlF0UFJXjFL/9doKrkLGdLqvBJInVlRfTYL7c24Gc4
      MSIEILhsfLJyFX39Zo5v/4T1+0vwOq00NTVhtrtw2fppa2ujo7uRVR+tw+Zw0N7Zg3R+dNhY
      tI8PPtvH4c3L2XGqkkObVlLT5UbwOGhuasJidyN6XbS1d9DR2ozF4QZZoqejlfbufvxjzCuD
      IEk09DjosLiv2MGt62Id4GuhUKDRaFCpFCjwsuadN2j3CliUCSzLUfLBznJuunU2iC7Wvv8a
      EblLuDMqHACtLgB7Xwc5s+YwNiWSg4Dsc7LijXfpxYjFJvL4fQv5w8tvMmZ0Gl0uEw8uHsWq
      7floJQ83PvQ98tLCB7f+wxxRknlxVxUfHmsgQKPixftymZ8V9Q+nOyJ6gAEUqNUa8hY9wF1z
      RhMSHYXs8dDf04sAjJt5I7fMmYC1o4WCmm7yxmehPL9xzhCZxtPffhhfZxnrdx4DwGntoNqm
      59kfPsPoUCsVzWZC03L5/jPPEOSsZf+h43R1d+P0emnv6BzEel8fWF0+lh9rwOkV6XV4efdI
      /RVJd+QIQB/MnHnzmDEpB4Wrn8MnSwiLiUKNjCyDQjHQFIExqTx+12y2bjuIeL6b7ag+zcqN
      B5BQodNqAdAZQwkRulm5ZjWlHQpSYoIwN5xj1acr6VfGkjcui4jYZOIjQ0mIjx20al8vaNVK
      YoK/ON6aHH75o6ffhBFhBhV9Hkora8gZMwaVUgHItNZVYCMAnG5Cww04JAOpsUZKz9WTmZ1O
      bU0do7KyUasUyJJAXWUZ/R4VOTmj6KyrxJSQhVGycq68jtjULEyuRn71wS6+tWwe4UmjiQnV
      U3WuGI82lLFZKSjwm0H/Uc61WvjgWAOhBg3fvyGDEIP2H05zRAjgWuCxdHKouJHFc6Ze9h6/
      AIYefgFcQ/wCGHqMHCvQeWRZYtf65bTbQKnWMXXuYrKTIi57v7e/mR2nW1i6eAaXe2xri45h
      1iczKSv+wt86qgupshmYmzfqCtfAz5VkxAkAWebEqXwW3/c0OlstH366kecenEefL5CkIIGK
      Lh9j4o2cOlNKTHoOCXRx6PgZ4kJkQuOyUNhaMMaOwtpUhjE+C1dbLZ39NpSRIh57L/lnSogf
      lYurpYrCjjBSA914jfGkx/vNoH8PDo/AoapuksINjIkNQnGFj7SOPAEAeB2cOHIAyd5JXPp8
      WkpPkG9PYVmGg03H7NQrK6hwBKEvrOLBZZOxdDXS2hrKys+OcdfsOBoabdTv+ICkJd+i5/Qu
      EhLC8XlCKNq0GeOoyRSVb2JyWgBt5cd4qzaIf/nJM4Nd42GJ3SPw8DsnKWw2o1Yq+OMDE7h1
      fNwVzWPkmEEvRmdi/qKbuPPOpXSXFmITQJZlxPNnGyfNWkCEXoHVbsHm8BASm8mSW+aj8zhI
      HpNLzcHtCLFj6Dy9Hbspg8hADYh2us0KFty8jG8/fj9GNfR2dSGp9eg0/tMAfw+t/S5K2ywA
      CJLMvoquK57HyBSAx8qOLRv4bOMudJHRxMfHU3FsCyu2HAJk6ivP0dnvQBC8f7HkboxIxSj3
      MnbKfNQeM9kTJ6FWAOoQJo6N5O2X/5f/efktLB6JcfOWMTfBy97TdYNSzeFOTLCe9MhAAFQK
      mH4VVtNHnBVIlmWs5l58IqBQEGgKRqdRYOm3oNKokRRqTAEaLGYrKr2BQJ0Kq9NLsCkAi8VO
      UHAQLpsFVYAJ0WVDFWBC4XMhKLUEqMFssaEzmNAqBNyikgC1jEtQYDLq/Vagv4M2s4sd5zpI
      Djcwb1QkatWVfWePOAEMJn4BDD1G5hDIj5/zXKdWIJm6wkN8snEf8ePm8PDtC9GoLj8RdZtb
      2V/YyrhwF4dadTx40/RLPndZ2ln+7gf0ySE8+q2HKdr6MckLHiMn7srsR/EzeFyfApBh3/Yd
      5C68j57CY3TaZyI0n2PviWIy8uYyKUnHntON3DF3DGu3n8IkNbLpWCvSzDTKG9ys6KwgZ+YS
      cjPjUACNJcdoVyWxOEtDQVk9PS2NhLkFmivOsPtIASnjZzI9I5gNu4+g9DiIGzubGaOj2LZp
      Ey5dDLfdsgij1t/Zfl167R5W5TcjyjL3TU4kOugyMR6uANftrzJvyWKObfiIDjEAhaubD1Zu
      Zeqs6Rxb/y6ljR3kF5WD18aJU8XEpiQTkZhOfFggPlFFVkIg67cc4PODYUljphPurGDD4Qqi
      woMA8Nq7eG/FBibPmsWZ7R9RXNNK/plSxk7KZefqj9m+cQ2HS5opP7aN3fnfzGnXSOf5zaX8
      fmclL+6q4t/Xl1zVvK5LAcjIlNe28P2f/oIodyX55U2IShOpqWmEBsg4PCKiz4fT5UISZUwm
      E1pDIEa9hoi4JEalxOPz+i6c5GqqKWPsjY/y6OIx7Np3FADB68arCCAtNZVwoxK7y4c2MIS0
      tAyMai89/RYi41PJmzKV2NC/jEDj5/IUt1gu/L/oov9fDa5LAYCC+DADr//xBVpJZOqEXGaP
      C+V3v/4tYvIcpo/NIIp2/vzhRnQGA4FhMbjqTnG6rh9jgA6FSoMpMOCCM6vo+ERObv6IlXtK
      mD1jMgGBJoLD41g4IZ7f/frX2MMnk5tswt7TyB9//3sicxdx+21L8bad42xVO/Gx0YPaGsON
      +yYnolMr0aqVPDAl8arm5TeDXiGsTSX8+qOD/OHnP7j8PX4z6NdClGTK261IskxOXPD5MxxX
      B78ArhCSKOD2ChgCLj9h8wtg6HF9WoEGAaVKjSHA35zDjRHwi0mc3b+ZjXtP4fZ6SZ9yE9++
      d+EVn/ycO7KJekUmt80afdFfPax76wOmP/Jd4v3z4CHJdS8AwdrKZ/tK+d6//pJg0cyZqk4s
      rWW88d5adJGpzM4KYdv+U4yZuZSl0xJ47+0PsGsiePyJ/8eO91/FLGlwKoJ56ltLWf7yOwga
      BSHpk3ls2Sw2f/ohJc1WbrzrIYJEEVF2sfL1l+jwyFgccOfS6ew8cpS2wFS+9+CSwW6KYYEs
      y6zKb2Z9QSsTk0J4ZkEmRt3Ve0yvUyvQFzjNfXgMoUQHCWz4dB2F+cWYPS56vUa+9/jNbF6/
      FZ0pmH1bVrNp/WfU9vpwtpWx81gxXZ3dLLjnSYKttdR19dDTL/LE93+I7dxh9u3fSqMynX/9
      p3vZuGYdZmsffVYHPR3tTF/6MGn6bno0cYxOSOHOO5Zc9jSZn0up6LDxn5tKOVXfx5sH61h3
      tuWq5nfdC8AUnUSYq4VTZV1MmDKO+rJyfIAuMBC9Wo0+IIgZ8+azYO5cIoL1JI7K5YYbFjAu
      Ix6lWk2gwYhep0VGRvC5MZst+GQFOo0Gj8uOxWJDqdZc1JBqgoJN6HUaZElGRsBmc/q9w31N
      7B4BUfqitSzOq+uCcni6R/8GKNQBZGckcGTPds7VdzH7lqVkRpvod8iMzxlLbISWQwePkTh2
      GvNmTaK++DhtTh1zZ07C2tNN2phcPOZOolITKTx8kt6+HlKnLmTx3Jl420rZf6aOO+67lyCV
      B0VgNCaVQFL2OGRbF6GJY4nQ2ilrMJMzOhWf3z363yQyUEer2UVDr4PxCSH8aPEoggKuXpxl
      vxn0ayL4OvnTC6v4zo+ewaT7+9Lwm0G/HoIoYfcI6DUq9Jqr21Z+AVxD/AIYegx7K1B/dztm
      +0CYRm2AibjoCC7nOEAUPLi9YDToQJbobG/B6RnY8mYMDkct2NEGRRGo/8tmcVr7cEpaIkIC
      v0HpZNx2OyqDCY1/1DMkGfY/y67Vb/Lh6k3s3buXE4WVSLKMIAgIonj+oLuIIAjIskzp4Y1s
      O1ExEF9Y9LD8lZdYv20ne/fupbi6me2fvMLZejOiICKKAqIkIQoCkiRTeWwra/edRRAEJFlG
      EkUkSUaSxAv3CYKAJElf5C85+fiV12l3iv5J8DdAlGR8onTFXKD/NYZ9D4BCScaYieSlRxAU
      EUtj4V7eXbcfh0fFD5/7FqteeRWLqGDB/Y9TufcQFfZS5s7MJVoNoGX8lKnEB+qJjE9h13HA
      28PzP/4N+sggrKKBCNmCGDuVRclQc/YAz5/4jJzFjxBQvwdd3j2Etu2hlLF0Hf0QuyGZedPG
      snvPYVAH8tADizldVop3636+e/+iQW6o4UFNl51/XlVAY6+T78xN43vzM67qXqBh3wMgSzTV
      lFFQUEB9Wy+yUktifAzOni76nG6UShXh0XFo0TBz5iRm33Y30Re26/ioPFdMQUEBnf1fRJrX
      6EJ58nvfRmn38dgPnsTS2IgHSB43m+8+cCM1NQ1/+UZXmXjs6R+QFRuESqMnLi6SsOQsshKS
      WXbbIv86wNfk/aP1nGu1YnMLvHmwjpaLfperwfAXAApiktLIzs4mJEDJyUP7EQNjCA/UIHk8
      RGfkkBKm5NDRM8gKxYBXaO/n31WTkjGK7OxstIov7M0KpRZdgAadOgC9QYv6/KRiIMCGEhkZ
      rVZFdWkRBaXnXZ6o1GjVKryCRO6kyQg9NRRWtiPLbmqqG5GubaMMWwK0X7wq1CoF6qtsMh72
      6wBKpQK71YLFYsElqZg9cyo2q5NpM/KIThhFlN6LWTKy9OZFJCbE4+zvIT4tiwC1AqVKxtJn
      xmKxIOuCSImPIjohjbCgQJLTktBq9CSnJqBVB5CSlkhoeDSxkSEEmMKZNi0PW3cniVk5pKSk
      EhcZQlJKGtFRkfS1NxOalsfCGROJiTRhc0NSQrR/HeBrkB1rosPiRqtS8qMlWUxJCb3i7hAv
      xm8GvYb4zaBDD/+ryM+I5joUgEDJqWO0m92IPhunThYMeIH7KmSZzuZWvIKdkyfO4vnSfa3V
      JezevZvde/ZwrqaFr99XSlQWnqDT6g+lOtS5DgXgZd+GVbz10Wc4XT1sWL8DjyjT19lKVU09
      bp9If2cL9fX11FSe5sWX3qKxrYHP1m2lvrGBti7zBQtPRf4+Cmu7UCt8rHj1JRqtEta+Dqpq
      6vEIEpLPSU1lJc0dvQBYezuorKrF7fNxfOdnnKttoaa+GcE/A/5auLwiJa0WOizua5bn8F8H
      +AoUCrC3VnCqMhmAvsZi3v14EzHhAYgRY8nwlbCvXmZ6bhw2Rz/NrT04zB0cPriHiupOfvGL
      nxJqGGgaj9uJ1apGZQxH62rhlbfew2jQYUibzmhVPSfr7TTVd/OTnz/F+6+8Q1hEMMEZA2GS
      Th/Zx8GWUm58/KfMGu0/GP/XcPlEfrjyLAeruokI1PH6Q3lMSAq96vlehz0AgILb7r6d3Rs2
      4gEaywtIm34z33rkfhqqigGYsfgO7rp5EdHhiUzOTccYEsvdDzyGiV48XuFCSsagUKJjEgjW
      uigoLKK5rReHV8bnsCBrA1HJHtx2M61NDaiix/D9Z37Mw7cMeJabt/Q+po2Jp6f/6rr2uB6o
      6rBxsKobnyjTbnHzWWHbNcn3OhUARKTkMicjAjsQn55N9fGdfPTpOhLSxgAMmNaUKmRPFyfP
      VAFfbWoz93TQ2NiI3ekhNDqZ6IgQosJMhIaHUlFQiCIgFL1OQUhUIr6OMt576xXeWrPXv/Xh
      GxJp0hF6PuqjUgGZUd9kz9Xfz3VoBhVpqqkhLCkLna+fmjYzo9JT6O9ootPiIS0jHUd3M5Ih
      iqiQANoaahA0RjwONynpKTTVVZOQkoFOo6KvvYnmrn5AQWBYFGmJMZg7m2ntcZI+KgPB1k1L
      r5tAjY+Q2HRESxvNXTZSMzOwttVjiEnD19+KbIggKsToN4P+DU7V97GhsJXsGBP3TU686luh
      4boUwNDFL4Chx3U7BPLj5+twXVqBvg5uaw97d++iudfJ6EmzmZOXhfIqLrn7GZqMTAHIPjYs
      fwM5fQGLRuv4bOtecsdlQl8TJ85WkDZuMgGuVrymVOipQAjJQGtrgJAkOquLsBHIzCljOXu6
      AL1GxKuLYVJGBKfKW5g7KYMjx84xcXIO+UcOowxNYtbkHFR+cf1VHB6BfRVdGLQq5mRGolVf
      m8HJsN8M93fh7GblxtM88vTDCJZ+4hLjMemUvPrnN0jMTGfr2jWEhgZy/FwTNce2Um5W0nTq
      ILqwIEorGyg4sBlN7Bh2fvo2psQ09qz+lMSsUazZdpgl01J588216BS9bD9eg7O7gejMiYQa
      1Hj8m+G+EkmWeXZlIf+3r4ZNRW3IMszMuHzw8ivJyPwldAZC9V46u+y0N1by6XuvUtrYjccQ
      zYJ580kKlQmISae95AT20GRcZUdp1sRicnXS1WdDrVIiCiLoo1i0ZA6xJhVuL8jnT4NJyKTk
      TGFsSjj9PT10dPcPdo2HNKIkc7i6+8L1gcorHw71coxMAaiDuOPOBax+/QX2nDiHITqb9NQk
      soPd/Po3v6FLk87oUVmkhXoIT55KYiQkZ45D8nmx9PWh1hvweDyXJGkIDifQ3sALr63A5hXp
      72ymoqYBtwjaa2DOG86olArmjIq8cD0/O+qa5T1izaCyLOPzehBECY1Wh1qlQpYE3B4vGq0O
      jVqFz+sGpQYkHyg1qJTgcXtRqZWgUCEKAnq9Dq/HjVqrR/R5kGQFsiyj0+vwul3IChV6nQ6F
      wm8G/WsM1hxgxApgMPALYOgxModAfvycZ8iaQbtrTrHmRA9PLcvj5T+/xpJHfoy26QCVchp3
      zh33ld+xNBby/oFG/vmx27/y812rXudIs5YbRqk5VGLj2Z/+gGCVROXpA6zbdgCXpGHxHf+P
      uRMyLutbaKBs+aw91c3TD95yJarqZxAZsgIwhETSULmf1iYDXV39FJ6rJKCpFEeggyNFJqan
      KFm7v5ZF0xLZuGEHgYljmZehpbOnl6LD2+gPzCInzMOGrfsIShzD7NHhbNl/mtTxuWzYVkL0
      5FsIVoOzp4GPNx7jBz/5GVpzNQfLu/G6I9m6bg3tDhW33n0vZQfW0NrvY8rcRVQc20O/3UoH
      cfQ2V7B2026iR01j0cQYVm/dj9rnJDR9KvPHRbJq9QZUYancf8+tGNT+dYDLUdRsZvXpZlLC
      jTw8PfmSg/FXmyE7BDIERxAhWDhw6hxzbr+d9rKT1Le5mDpxFAcOHqH41GEEQwi7135MzIQF
      xAZ4sTi99NSe4aOd55g0OopPP1zJmPlLkZpOUtClJjkhinkLb2d0Qhxz50xGATi6m1FHZhCq
      9nCqqBqNyoulpwOXKghzQwH5ZU1UlRQSP24G1spDtKnimTgqHiQPn338AT1uiQMbP6Ckvoui
      0lpmzJrEoW3bKSo4QU23D9nZRfc1POAx3Oixe/jBJ2dZcbKJ/95WzofHG65p/kNWAAqNkVFp
      gRw628KE8VMxOatpV8aQlZNLuLOCNXuruGHmWNxuL2HhUSQlJqCUJbQBwQQrHbT3O3C6ZKJi
      ogk16fFKSnRaDUHBYQTotJhMA9ttjZEJ+Lpq6HVKRITqObBnPzXlJVQ292IyBiDJMqj1JCUm
      olEIGINCiQoPRYGEyyUwauwEZk6fQZBOgTY4isyUeLRIhCVmM33CKLobKimv7xjk1hy6mJ0+
      umwDJmUZqOq0XdP8h6wAQEnOuAlkjBpLdLiJ3NwJjB2fg0ahYdLYVFRxo4kzqll06zL2fPxH
      Vu88gdoQRFrOFJ56YDGHj1dw253z+OSPv6PMEcENkzIJCQtHo1YSFBaO7ryZzRCeysPLpvPe
      a39k074C5i65meSUZLC0ogqOQaOQCQ0bMMuNnbEYe9kuVu8pIDQsilvuuIWSw7voFEzERQQS
      GR4CCjURkeEEaFWUFebj1EYxKvHarGoORxLDArhpbAxalZJIk457J13dsKhfZtiZQS3NJfzh
      1Y+58ZEfMicnYbCL843wm0G/Gq8gUdlpI9yoJS7k2gZTG3YCkGUZSZJQKpVX1WHS1cAvgKHH
      EB4CfTUKhQKVSnWVHn4ZUfDh9QmXHGmUZRmfz/fVf/vS+0MSBQThC/8qguC7JOSPn6HFsBPA
      1USWZT597df88Cf/jU344qH1WVr591/+D66L7hUdPfzy57/G9qWHu/TgOt5ce/DC9ZFtn1JY
      13O1i+7n72TIrgMMBqK7m7o+A5OSfRRUtjMrPZCP336VZrOAxSVhbq/ijfc/xaUJ45EH7wCg
      p6mQl97bjAoPKdOWkmuAprIT/OoXe5i89FEUNgvqy3rmGrk4PAIv7KrkRF0vS8fF8r35GSiv
      ohv0y+HvAS6iqegkDp2JiFATJ06cobephGpnDM9+90ECtUrOHNhGfZ+b/uZz7D9VCYDocyPq
      Y/nxT56m+tBe+nwQkTyOb98zn+OnC3FYzbg8wt/IeeSxraSd9482UN5u46XdVRQ0mwelHH4B
      fI7s4+jx0yTFRYExlq6qfGySBslppq2tA68gotcHkDl+BjctWUxu1hcWKIe1j7aWDgS1FrUS
      DEYjWq3mmkQ4Ga64LuoVZfnS62uJfwh0HsnjRB+Vw7L77yVIKRCiBTk4k6Uzmjhe1EDepFym
      LZyFecNmWh3RTEmIZmJeLhqFApXCy6HDZ7jtoQdIUHTiCjShD4YJ2XqSVAEYQw2DXb0hx9Jx
      seyv6CK/oZ8bx8YwLTVsUMox7MygQw2npYNztf1MzRv9N+/1m0EvRZRkRElGrVIMmkMCvwCu
      IX4BDD2G9RxAsPew/N3XOVxUh9fRy0dv/h+HC+v/7vQ6q0+z7UgRABWn9nC6uvNKFdXPEGVY
      C0DyOjh9Jp9Dh0/R1VDC/mP51Lb20t1UwaZNmyiuaaO3pYrdu/dwJL+MzsYKNtL1Zh4AACAA
      SURBVG/eTH1bFycOHsbmk2muKKCyecBOb+tqpqxuwClrZ1MVzT12XOYOdm7dzKmSGnyOfvYf
      OomAm6P7DmB1ujm6Zzs79h3HLUiYO+rYunkLNa19CG4Le7ZtZv/xQgT/QtgFZFmmrM3KR8cb
      qOywDbqhYFi7RRFdFg6crMWod+OxWJG1OkxRyXRVFWOxdLLpUCk54V5W7StjxqQ0Pn77Y5JH
      Z1Be0Yqz7Qw2Yyqnt60mIXc2kSYtfc0VbNp1kIrSIorKqkjImsDh9R8SkJBN4Z71SIHhbN15
      mHkLxrPi1Q+ICNXy8dajaLxm9GHRrHnzVfp8Agf2ncAgdrP9VB1ecyvRGRP8blHOU9Fh4943
      jrGzrJMNBa3cMi72glPcwWDY/xIKjY6UYBX7ihvJSIlB9Dipq6/FIyiQpAHTWlLmOMbGm7Ar
      wpg+9waWLpzGrFnTOLplFe2aJDJjvvBEnDp+Jk899RQ3TBqF5HXT5lAxb+4sxqVF0tllBklC
      9PoQZJngpBzmjE/D2ttBQ10NXTaRyJg4csakkzQ6j/FpkfR2tNPa1TdYzTPkONPYj8M78LvY
      PQIFTYPrMmbYCwCUZI1OJSA8nRjjQHUEnwuz3YVWkrgQpMiUQF6SyO+f/xUfrt9PSOoEfG2l
      jJ06k4sPa2l0AYSEhBCg16LUB7FwYgJ/+M1/caRBZNaMCUQqe3j55XfocQt4rN2cK6vA7BIJ
      jEhkTl4KFcXFWAQ9kq2TsooaXKISg05zzVtlqDI1NYxA3YD1PShAzeSUwTF/fs6wtgLJsoTP
      J6JWKxElGaUCZBQgS8iyAmQZpUqBJCvQqFVIkojPJ6DWaCg5uo3Vu8/x3E9/RKRxoAuWRAHx
      /L2i4ENWqFApwefzoVSqB/IRBEQZkGXUGg2S4EOUQavRnC/PQPoqheL8BjoFGo3G7xblPLIs
      U9/joKDJzOSUUJLCDIO6q3dYC+AfwdzTjhsD0eHBf/UA/JXEL4Chx4hdCQ6JiB3sIvgZAgzZ
      OYDg6OWF//o3/v3nP+eXz/+Oc029VzyP7vpidh05d+F684cvk1/XD4Kbd157jW6n94ubZZEt
      H71Fadul8b56mgr58zvrLlzbOmvZtOfYFS+rn6vDkO0BZEmk267lF//zPCWb3uXgybPUHaqn
      1Soy75bbqTy6nRabktvuuhtFdykbdh0nYexMFk6IZP1nB/C4baRNXcz8nGg+W7sWqzKc++67
      g85zR9h2uJAJc5bQcnwdJ1s1ZGenkRRhwNrfTbBHBFmir7cXj9vOti2bqDcruP3uuwgINKFR
      yBzftY7iRhsKUcm8BZm01lXy7mt/Ji53LlLVPrae7SE2Qs+ZQwdRhaXw4P13YNQMr9NrV4sT
      db2sO9tCVrSJh6YnEzDIflOHrAAAcLXx21/+Eo3GyAPfupUdb2xl4t0/oKdwBx2aZBZO8PHx
      6o2M07bh0YTT396CLV1NaU03//z0Ul5/fR1Sezz5Nd2YhAq27Ayj7NQBnvqnJ6mt6yB7dDbW
      iEhiQ/UD+ckSa97+Azv1Stp6BZqLD7L1RBWJwTJrth0huLUMdXImO/aW8e1v38XrL37AtAUZ
      CJKGBfOm8sqqfTx122hSPTbUPdU09ktkBvbRY3VjDL+2Z12HIm1mFz9cWUC3zYMCUCsVPD4r
      dVDLNLQFEBDHz3/9K0xKBeBml0ZDXEICnbUeAoNDCQ3x4vO0kjppChqLk4M79jF2XDxqrZ6w
      sHA0iDjdbqKTs8iNURAQEUgRKsIjIrH22ZGtOtQaLerPD2IolNz71I+Ym2Hg9//zIj6vB1NU
      EjPy4nEZ42hrBUnwIqu0hIWFotMMjCADwyKIjQxHKcto9TpUajcxKalMd5moPn2Qsrp2ksPT
      Bq8dhwi9di/m88NKGajrcQxugRjCcwCFUk10TDRfdJAKIqJi0KkVTFq4FEfZbt5ce5i771qG
      Xi2Rf+wkERkTiQlS47G28qeXXidn0VKWLFqKtq+S/IoORo3N5Z65Y/j9f/+OouZ+4uJTaS89
      TFW7FYCQ8GgMOjUolERERZE+cR6jDBb255eTkpxAaGQ0YZEppIXYePWdlVgF0GoNREWEoFRr
      iYmOICQqEU9zEWWtFsoLT+LQRZOdcu3cfQ9lRkUHsnhMNFqVkvjQAO7OG3yvHtedGbS36Swv
      f5TPb37+3auSvui189aLv6W+X8KUOI6f/eAh1F/Tjuo3g4LHJ1LX4yA8UEuUST/Yxbn+BDCU
      8Qtg6DFkh0Cf4/O6cTqdOJ1OBFECScTl9lzBSOwyXo8bQRxIURR8F/Lz+gbO8nrc7r9wbSJL
      4kB5Lrp2uS+NGjPgZkXAvxl06DLkBbD1/Rf4+a9+xx/+97/58/vr8dg6+OiTzVw5d7Miq1/5
      L07UDhzKbijYzXM//hkvvfQCv/7dyzT3udi+bgUtfZdO2MqPbmZnfvWFa2dvEys+2/mltD2s
      fv112l34GaIMbSvQeZbc9xQ35kbxxh9+Q0VTJh2dvVjaq3jpjQ+xSXqeeuYptrzyOm69GtkQ
      RYCrDU3iTB65JYf333qfbifcfN9juM9t5Xi9DZvZzJ1PfB+h+gDbT1Xj7ush5aL80vMW8pNv
      38rRz95h36kyxO4unPZu/vjG7+lyK7nr8YfZv3EPdZ4SbNXBlFT3M3HiRDp6+rB31/PmWx/Q
      79Oz9MZp7M/Ppyd8F997cMlgNd+Qodfu4ddbyihrt/LQtGQemZE86LGZh3wP8DlKtZ6wEAN2
      ux2LxYbT4SA2KQ1vXwsN7X04nF7ue/JxzPUN3PnEY7QUFXJ8706Cx93Is0/exs5NW7HbbaRN
      vpFlM1IpKK5g9/Fi/unZ5xiTGPoX+SkUSqKiI7DZ7NhsZrxOG229DmJjo3A7VcyePZ6F996N
      wWVnwsJ7WZSXjMVqp+T4XsJyl/Lcdx8kZdQYRiekcOcdS/CP+mHFySY2FLZR1Wnnf3dUUNtl
      H+wiDQ8BmHs7qa8qprrdQ1LMwMNanH+IftlEbHggyKBSBWAIMmLSBWIMDkQHGAwB9HS00tzU
      gsZgQqEAQ6ARnU4LKDCqFTQ1NdJruXR443aYaW5u4Fh+GaPSkwAQJAVTZs8lIVBk/9GzSAoF
      fV1deCQZo9GIUnHe27TRiLln4HxAW48VWfbS1dWHhB+v8EUrSLI8JE7KDfkTYS67lZqqCmqb
      u5h3691kxwVhdkrMnJFHc20D6aOyiYpLwKhUkjY6A4/VTcaYdFw2DzMXL8LTXkllu4e7716G
      TvYQFJ1KWABoguOZm5fGydPFhMfEM2rMeMIDNQheF80NtVRW1RI3djYLpuXgsllIGTMBd1sV
      zVYlN920mKSYUKpLK4hNSyE2MY1Ikwa7T8G8efPpbyiitsvLtGlTCdJ5aex0kpWZiG+EnwhL
      CjdQ1m7F6vLx+KwUlo6PG/QhkN8Meg3xm0G55AzwUPDuPSwmwX6uH4bCQ38xf9kXyxKtDdWc
      Ky3H4flLd3U9bQ10m51fK/H+zmbae78IedPeWEO/w/uV98qySGN1OVV1zUgy+NwOrI6vZ+yU
      ZZG+vvO+JWWRxupKHF6wdLdR29SBJArUVtfilS6y28sy5v4+xMsNzmWJ5tpK6lu6vt6agyxj
      7uvD7wZ3eHGpAGSJ/J2rWL5+N6cObeOPb6/CLcq4nXbMZiuiJHNq52qOlbdht1oRRAmn3YrH
      K2C12bBZzbg8XmwWM26vQPHhzew6WU6/2YIoyzRUFdNt8+J1O+nv78dzkT/I5oJ9vLFiE+uW
      v8Gh4gb2rf2Q/QW1OB02LBYrTrcXj9OO2WJDkmVk0Ye5vx+310dvXSGvfbQet1cAZA5vXs7Z
      +j4ObvyQP727Cou5g/c+Wo0giFjM/djsTpzmFl5/7W36HV68bseF+rnO52dpLefFP71BaV0L
      FosFi9WOJIlYLWZsDheyJGK1WrHbLNgcLrx9Dbz02nIsri8vhvn5HI8g0mP34B5C3rIvGQJJ
      Pge7j5Tx6L/9kngjdHXa8PXU8MdXl6NUK0mefBOhMiBLvP7Cb7jjhz/j+Ad/IGHB4+xc/hLh
      MTGYnRqCtC60STOYZITCw9uoObSGSUsfw3buNL7oCez+aCW9VhvhYxfz/fsXDmSukHA6HEyd
      PYPEEJFVReX0N6hwnesmv0liyaJ5lJw4hFeSyV1wF/rm45xo6EOpjWByMjRUlFBS38WUrDgy
      M9MprzhLV7OX2AAl1dVlBESlU3F4E5uPV2CxC9x+wzhq62s5euIkzWcPYhMhY8qNULGVU50a
      MqOVmJ0epL5qnvuXdxg3fQGzEnxsO1mLLMJ9Dz3Ax6+8QERyKi3tbu6/LY/m+gpOFtdx87S/
      7SZxpOHyivzTx2c4Wd/LxMRQXn0ojzDj4LlD+ZxLewBJRpRBpVQAKgxGPVVnjpM47Tae+8G3
      qTh9CN9lTFfq0ASefOwhBLWW7z52H5aeAQdT05bcyz8/sYzTBcUDWUgykdExqBQi7Z1feF4L
      S83jiXuX0FJ+ij1nWpk0fhSLblmCXgHz73iY9EA7lfXt2Ox2yovPcPhkAWaLhb72GsJSxpM0
      eiJTsuIAGJU9ioIjexGiMpifE8G2HUdJzcpEawgkIsiAubeHyKzxJCelkRsjc7qyGavVRnlV
      FQCL7n6Mpx6+n5jkHObkZRCeOI6nH7udw6fKeOJ7/8ztM5M5fqYKdBE8+czTJGrMhCflEpOU
      zQ3+h/8rOVjVzcGqbtw+ieN1vewqHRqRMy8RgFJnZHpODKs+Wcf2z1bw4psrCYqKpeL0YXbv
      3o0hPAmVQgEK0CkFju3fR1njQEXUajVqpQqdTotKqbpw0Lzo+H52HjhJdFQMALauRo4WVpMQ
      F43iIi1Vn9zJpqMVRIQF4/b4UCpkygtKcANqlZrQiGgiYhKZOjGH0TljiYsIY8LUGaSkjSE+
      VIuls5HatgH/OyEpWcjttaRkjWPU6HE0NrSQmZrIiUP7UARFEahRgEKJx9pNY7+PmOhYZkzJ
      ZcyozAt1uXiqplCpUKmUxIVo2b1rF0fOVJOYGA0KJSqlAgUKZIUSn7WL0ppWAOw9zZTVt9FS
      W0pb3+Dvex9swoyXuoYJHQJvf/jyOoBCSVpOHiFKJy5FELfffgvxyRlkxhhxK0O4/bbFhASZ
      iI5LYEreODw+yJs0meSUFGKjw0mITyAkJIyE+DiCQ8NJSU4mMT4ObVAct944iyBTEKmjJzI6
      IYSEURNIiY8mLjYSBRCTNpowtQdNeDq3LppBfGIikk8kc0wW8XEJxMSnkBEXiFsVyuzpeUyY
      lIu1p59Js+aQGB9HhFGDITSaUFMAKA3ExkUzfsJ4IiMjiY6NIyd7FNlZGcjomT9rMuExSWQm
      hhMQlcG8iWnYJANzZuQRHBxMdFwCQUY9puBQEhPjCQ2LJCEukpzcPCSHmdSJ85gxLo3gkFAS
      ExMIMoUQn5FNZqwJVUAIUaEmPHYz/W4FWsmJQh9KkEE7oj3DxYYEEGLQIIgSD01P5u68hPMj
      jcHFvw5wDfGvAww9Rt6ryI+fixgRAhA8DvYeOIggSrRUFf7dHpsFj52a+parUEI/g8WIEIDo
      cbJj115aq87wxvvriE1OQaWQaKopo6i0Cp8k01hdzrlzxXT02WmsLuNcVQOiJOO0dHHm9Gma
      O/spPrKFDz/dQo/NTWdzDWcKSnALAvUVZTh8ItVl57C6BOqqzlFRWkJtbS2F5yrx+XfC4faJ
      HKvpoWYI7AC9mJGzFcLZySuvvkn8jPvJiguh+vgWPjlYS4LRS0HtTITyDfQYs5mcVs2+E+UY
      cdB862PYivfQ4/ZSvvkI9+WZcDltNJUeY/2Ok4xOMnHgTA2pylpCzC62fPgmtzz+FCd27CNI
      3YszOBtPSwn9D/4LN4yPH+wWGDRcPpHvrzjLgcouArQq/nT/RBaNiR7sYgEjpAcAQJS54/Hv
      0n12N3U9Lqoqq5ix5HbuvmsRTeVVyLKe+Tffis7ViUeUCYqMQ+m2I8oiXq+A0+0mJT2d+ORs
      JHMLGVMW89Ajd2OuqiArZyx7d24lJiWNo9u2EpSeQ5Bawfxb7mXy6ASs9pFtBm3rd3GkpgdJ
      BodHZHNx22AX6QIjRwCmGCbl5nHnohw++uQzMsaM5fCmFby7fAs5U/NQKhQoFArSRo8nQAUO
      Sy8GUyC1DU1o9To0Eih1etoqT+M2xlN7cgt//tMHJEyeRsb4PFwN1UxadBuuzlrG5U0c7NoO
      KcIDtSSHDUTKVChgQmLIIJfoC0aEGVQSfbR3dhMbGws+F02d/cTHxWDt6cQpKImLjcbc3Y4+
      JBKjVkVPZztuWUtcTAS2vi6cghJEkYjoMLraOgiKiEFy9dNv8xGfEI9aKdPZ1kZIVDTmri5C
      omNw9HagD4lBsPcg64IJCdSPaDNobZedDYWtJIUZWDYhDp16aLTBiBDAUGEkC2CoMnKGQH78
      fAUjQgCyJFB8bBcvvfgCH6zajM37Jbukp4flH6zBPuAGiP6GIj7dduzCOd6q/N3svsgFysWc
      2rWGMzVdAOz6bDktzU28t/wzqkqOsuVwEUe3r6awvucq1czPP8qIMIN2155m7cFavv/tRzmy
      bQMNHWYStRb2Hz5FZPp4ZmQFUlJwFmOImpjkHFKUXRScKUXjaidnylwsHY00KYIxd9Sz/8hp
      EnOmkJc94NKjo6EaddhUABpryknMnU+g0YC9p5W6jjBizVWExM4c5BYYXErbLByq6iY3MYRp
      qeFDYg/Q54yIHqClppLEnAlER0Zx92PfYVychg/efA9DXBqnt33KmbpuvF4PYZHRbP3kPZrN
      LpxuL5EhWt794BNEWUaWRD559zWqGptZ/sbbdDovhN9jx6dv8Ktf/YqCejN4rJzML/4iON8I
      p6XfycPvnOR/d1TyxPv5nKi78oFO/hFGhADCoqLo7WjHJ4qUnTlOS3s3vW4deZMmkBYTRJ/Z
      ToAxnPF5ecQEanD6BMJiU5g4IRcEJ/L5Q0B9FhvxiSlMnJCN8iLTwaJ7nuRnP/sZucnBg1bH
      oUplhw3z+ZeFR5AGPSzqlxkRAkgYO4tURTPP/8cv+Hjjfjy6CBZOjeel5/+DYouRydkJuG1t
      vPL732IOSiUp1ERn1Sn+94VXyJowA7VKhUqtYf7sGZScOUmPV0OwfmD0qFAq0Wg0aLVa1GoV
      CoUClVKJQqFEqVSgUCqvWRC+ociExBDiQgaCg5j0auZkRg5yiS7Fbwa9hoxUM2iv3UN+Qz9j
      4oJIOr8gNlTwC+AaMlIFMJQZEUMgP34ux3VjBrV1lvPKimP86Lt38qf/+S0T73yWTKmMXWVm
      PFYvN81PZutZG9nqOjQ5N9FxdAfzHn6GhKBvls+6d14kfu4jTB/lD3t0PXDdCCDAFI2zp5Hm
      1jpsLomiklIkVRUxsXl0eFqRfB7sTjdutR3JJ6HR6lBKbjat+IiShl4W3/MotnPbqenx4VEE
      Em900iVG8uid81j14ft0efU89Pi3cDnM7N3wEUf0wTz46N3sXbOGWx54jIPrV5CzcDZ7P92M
      aIxg4axstmw/QliogTGzbmNmzuDHwxosNha2sq2knakpYTwyIwWteugMPIZOSf5B1PpA0kNk
      9uw/ybib70FsOktxbSejUqKprm5AuORukcaaKqxWMw6liVCNgyP5xXQ015KUtwCx+QyhY+Zj
      rT5GTU0VxU1mYkL1tHf1AQrGz17KpBgPO44UUldTjUcQaa6tweq0Ut1k4f4HbmXf+vXMuesh
      AtzddFu+nie965GyNis/WVPMztJOfrO1nO3n2ge7SJdw3QgApZaMzASO5VcyNnsscUEuqs2B
      JEVc3v1Gb2stRRXNRISFDsTtVCiIik4gKFhPdEwigQYV6EJZMGcGem8vxwsqBrJSqdFqNMgo
      kEUBt8uO1T7gxjHAFESQ0YAsDfQyatX108R/D102N77zLilloM185WL7XAmumyEQQNbYPHKb
      dSTFBKGcNhNHjBqDRkdKSjwGYwgJMRrCVAmojQHEJacQk5BCnGE/FqIJDw4gUpeEUackOi4Z
      g0ZJbEIyYeFhnN23icY+kWULc+g+W0vZsY24xAAee3IqVb5aVrz/IYaYJAL1gSQnxaNU6Zk+
      czwrXvsTkToX45Uj1+ozPS2ceZmRHK/rJTM6kGW5cYNdpEvwm0GvCjKnd61k5a5C9MZQvvPs
      cySHjdzzAG6fSKfVTZhRi0mv+dtfuIb4BXANGakCGMoM2QGqLElYzf309vXjFa6NN2Gfx4nV
      MRDS0e204/QIf+MbfoY7Q3QOIHN068fsLWpBLbpQRY7lx9+7n6vdeTae3smGWj3/8ujNnNy2
      nL74G7lzRvpVztXPYDIkBSDZWth+opUf/eJfCVE4qWruB1cf7771FrUdVnJvuB1T5zFMk+6l
      aO3/MXrZd2nYv4q0CXns3X0AN4H88Dv38sqrbxJu0iOG5vDg3BjWnrHyo1sz+cXbx7h3fjSf
      bjhCUOwonv3BtzBpBzpDl81Mc3MzfVYHxEmc3buOtXvPYAhL5sn7F/Dah9v5+S8e5c8/f5k7
      n3iQ5e+8g1dp5MlnnqPt2Hp2n6khLXc+N4438X/vrkUdGMUzP/4R0YFDsqmvKpIss+5MC/+3
      r4Yok47f3zOetMjAwS7WJQzJIZDgtOPTBGIMEHj7pT/w6SerKSjIx2wYzfP/+RxVB7YQk5rN
      yQO76HV5KDmxn1ZfGFHBOhISYrG2ldNhlRB14Tzz7D/hbKzE7BbweAWQRNweL3arBVkbSHiw
      Hp/wxTSove4cW7ZsobCyGcltYeOBEp779/8gL9LJ0cI63B4PMjIejxuf24ndLREbE4W3v4XN
      u4/hFQVOHNhOY0c/HklHdGTwQL4jkH6Hl99tr6Cpz8npxn5e2Vcz2EX6C4akALSRqaRqO9m2
      p5BZN9+It78PrcGEubOR8tJSfJpg0idOpu3sfpKn3UZP8UHissdwdu8utJFpRJoGtt8qNHoM
      Og0qBajUGizdbeQXlQ3kYYpg4Q2z6ag8S3XrF4c00nJn8/TTT7NgSjYKlQaTyktJWTmNHWbC
      woKR/397ZxobV3XF8d9s9ozt8Uw83j3jfbzGTryQlZCd0gQoFaGbaGlBolJbqVWlfkq/V1Wr
      SjRtVUSFgEDTEijQLNBshGZx4tiJl8RrvMXLjMezj2dfXj+YlBIMOCrYE733+/zu1b3z5n/P
      veede07ATU9HN85IjJigZPP2XegEOxd6RzGsyuXRfft46MGvYtBr2bFrGwn7GFf7b63I75hs
      JKO3JTnLpMqU1K2uY3q4h3GLjx2PPEZDbQ3ZqSG6h6zs3fcEhQYDGqVAfetG8vQaGlo3YS7J
      Z8bqpL6hhrwCE+lpamoqiglFoGH9RpTeaYKKTEymEpobzQz09mJcvZFNTTWoFDIS8SjydANl
      RTnEo2G0eeVsXVdLb+dVChseYNvGtWSlRpl0hig3FdPY0oJz/AYhdQF7HnqQxqpcurr6qWq6
      j+rSAoZv9KApqGX3lmbUKoXo0qOrVQoM6SkMWLyY87T8cm9t0tQFuI3kBl1GJDdo8iGOpUhC
      4lOQBLAI4XknnVfaGRidJiHAzf7ruP1ervf0c2eBw1h4HqdH3Lk/72UkAdxB2Gvh9797jqFb
      U/zjpT9y7vokx944yC2Hk6GBYQJ+H3MOJ1aLlUA4wrm3X+KfH3QTTQh4HHNYbQ7iiQQehw2n
      04nVZicu4k1mLJFgyhXAPp+c5WPF55z+HKYGriI3rePbj+/Fv2s7co2WLkBIBOi4fI2S7Bgv
      HOmgbJUMdcVGUm6OMCFL0G8SePPt06iVceq2fR3XxUOMCwX4Z8fZ96P9rE+yy+DLQTwh8Nt/
      DfJK2wRatZLnvtXEhnLDSg/rY0gW4A4EQUD2YY1I+aeEMpev3cLT33kYx7SDNWtradm6k6nu
      C2x87Af85Htf4/KVKwB85RvPsG2NCetccqUCWS7s82FeaZsgEIkz6w3z4vmxlR7SJ5AswB0Y
      q5sIHX+ew+/EGOtqp/nRZz7xjOy/eU4EFEolg93tbDGXcvbkEWa1AUpLm2H45oKMRJwS5bYb
      NBBZiK+6nR4lmZDcoIsQ9jnouj5IRraRmspibt7oIre0jFtDtzAV6ZkNKCnLVjE05aXKqKO3
      b4S6phZmR65jD6loaqxmcrCXzOJ6IrYREtpCjDmZonSDXr3l4sXzY+RmqvnZTjOZGikcWrSI
      UQDJjnQGkBA1ohZALOTl5JE3eev4+wQiCdyz44xbPB97JuKe5viZyyzPjQSJ5UbUh+DB9hNc
      HgtQTB/varLwdr1BsHArTz2ygYGebnTGKorTYviDYZzTo1hcIQI+L+aGBqw3hylfXc/AtW6q
      GhoZHeqjqCCXvoERCsuridonyatuRumbYnJeSW1ZwUpPd9lxByK0jzmpzM1IujDo24haAHmm
      CrxvvYyzppmt1fmc7EwQi0U4dvAPDLrV+BxHefKbe2jvGqBEMcGhCzOsyRM4P+wi33sNf9TP
      nw68zLM//T6nT/VQlR3DG4lx+PgV9rRq6JvPRDN2HOXqx6ld6ckuM+5AhCf+3MawbZ70FAV/
      eeo+NlYk1zcAEPUWSCAQgSef/TE1Oj+HT3ZiKsjFXFONzWIlVa2motKMEP8o03910yYe3NJM
      wB+gsb6SY0ffo6ahipPvvEdxXQ3BQJBINE48EqVp02Z6//0unRMx1tWLr0bwgNXH6NxCiIg/
      EufsoG2FR7Q4IhaAjETQzd9fe5Ur/VOUmgrRajP44NQpKupW4/e6sM650GnTF21dUt+EfXyS
      3Q/vxWGdprnBjMVqJyJTopbHSMmtJys4gK6ymUyV+D4GlGWnk5uZCoBKIaOlZNUKj2hxxO0G
      FRK4XU4icRkGQxZCNITDGyBLr8XjcqFKy0SbKsc5HyYjVUY4oSRdJeANJVil1eB0uNAZ9Hic
      HnQGA2Gfi3BCgSwRxWub5OBf3+CRZ37OmpIsQHxu0KFZH6f7bdQVZrK5TC/HwwAABKxJREFU
      0oAyCe9BiFsAXyLu2UksPoGqimIUHxoAsQngXkASwDIiCSD5SM4rkV8wUb+bFw78GkvcgLlA
      yXO/+g1z8hyqi///FOcXjr6GRcjFmJ3Bsb+9QKo2i0OvnyBDbudcv4PZ3tM4FIUUZqWL7krk
      vYAo3KCJeJSRiVEssSu0ZpXTOzaBps7BqSNHWLNrN+MXT6KrbOV6xzlipJKvU2FxeCmtayU0
      1cO4I8rWHZu5cbWfnQ9tp+vsCYytOzHqU3HMTKDMX4h1n5kcpXydAoNBT9BtY2o2Rtw9QbQ4
      OWPhv0zCsThHeyyM2/08uqYQc552pYe0KOJZijKMrEpM8/6lbmpqayER41pbG+5whMGuNqZt
      Ti6ePY+prhHr8DXscS35aRGs7ii2m+28f22Kyb5LjE5Nc/byDTI1H60dx149wP79++kYcUll
      Uj/k9Y4pfnG4mwNnbvLDg504/ZGVHtKiiMICyBUqykrLqS9Ip63PxpbNDThiejJLS9EoFeQU
      laLTplFR30JTbRmxm2UUm5tIV8xhtbspKjWjW6Wjcut9XL/aQeX67WhTF/bxWQUmvvvA02yo
      yefIoedJS0unvMyIVp9DYUKLQWNCm7HgDlQqlXi93v8Jp/58YrEYSuUX85qWs698dZz9u0sA
      kMtkeL0e5NHFI0FXco7SITjJcbvd6PV6qa+76Eun0y15kRHPFugeRaX64uLnpb4+iWQBJESN
      KNyg9w4C19vPcaVnEEOBibQUOUPdl5iXZzEz2MHV3lEKS0tRLdFuhxzjvHfmIu6oiqJcPSGP
      lbaecfQqP+cudoFaS1bm0gpXh5yTnDhzAXtIjjFPT8+lD7jWO0xKqsDFCxdxh1IoylvqNiZG
      25mTXBueprKsBPetAc5e6mQ+rkbmGmJsXkPeEq9PRrxWTp05h8Ubo7gwm/6OC3T2DCAjzKXL
      nTgCAsb8Tw/Ck7ZASUUYZ0BNq7mAWacXYiHCoTCeUAyPx0PI5yF8F/Z6cnCalt0PELQtFKbz
      zwcJhP145izoC4oZ7OtZcl8zIzM0bL2fiGMWBBn1rfdTazIwPTZM3aY9+J13ceE94iSiKaE8
      TYErFkdvNLNjSxMR3zzhoB9faOkeo7lJK5Ut65D77MQSULV2A42VhaDJY/eO+xHCvs9sLwkg
      qVAgCBHCkShKpQJBoSY/e6GQcVSuZl21Hotr6Zmm1WoZ/vkQCZkSQRAw5OahlMvQ5xhRJIJo
      UhcP9FuM1FQZQX+QuGzB+2WdGCacnkdxrp5Q0EcicRdeHEUKQjRIIB4nRQbRgJPewTkaGivJ
      zcm+qzwCKSkKQsEQMUGOTAb26TE8ghZTlpKe3iHqGxo+s70kgKRCRU15DpPzcooyEth9EbS5
      JRizNNRVmJiI5lCbs/Q/mnF1A9YbfZjrq7DM2kCRQm1lGWmZq4j552lZ37rkvgpr6rAPD1FZ
      V4PFOo3b6WZmfARVnhn3UBdVjc1Ln6ZCj8mQQJ5VRNxtwzbnxueZY2zShkpXSEX+0quXZ5dW
      4J8Zw1Rdg806g9vpwjo1zsSkBa/Pw8j41Ge2lw7BEqJGsgASokYSgISokQQgIWokAUiIGkkA
      EqLmPx8RaSAciz8mAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='tip (1M)' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='tip % (dist)' width='192'>
      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
      AAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='pay type (neigh)' width='192'>
      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
      f0aEg89Bi5pZAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='tip/hour' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='pickup+tip/hr' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7EAAAOxAGVKw4b
      AAAgAElEQVR4nO2deXxbV5n3v1erZXlf4jVe4qzOnrRJ2ibdKG1KQoGWKZRSmK4zdPgMywAt
      vDBvmWF5C5QZCtN3mGlpKV1oQ6FTuqSlpSlN0izOZidxEie25X2RbMuy9uXOH45DnESOrXut
      K8nn+/nko9iWfue50nl0n/Oc55wjybIsIxDMUHRaGyAQaIlwAMGM5owD7N3+Nq9ufZveLhvd
      A24AvI52dtc3XVSk+fBuuoYC5/1+27Z3VTRVIFAfw9h/Gk+cIl0P2z5wsXBRLe++UUd1WQFH
      bA7M5jD2tgGMpgAhr5PuviFqaqppGwzxqc3XMuToZe+eF1iycA56Sz6+oV6uvuYqmhsP0tpi
      4/Ir1rJ7115qFy9iwG/EFBjC5egks6yWq9at1PL6BTMcw9k/rLp6M7LjJIeOH8WYU0Z2BnS1
      2xhZvpimxgaCBijKsVCWb2HAA13HG3BtvBaAyppq2nuGkR27KF6xGQBzViEragrZ+cFeympq
      OHX8GD0uMBAgO8PMZtH5BRojjWWBent7KSoqwusaImRIx97ZSnZePhGdiaB3hEjAi1c2sn/X
      e6y45ArKi3Pp7B9mXnUFLucg3b19VFaW8czTW/jMXXdi0Y9qZliMYLTS1dZKRc08etpOIRut
      WEx6ioqKtL5+wQxHEmlQwUzGcPGnnI/P5yMcDitq2Ov1YrFYFGkIBEqJyQHC4TBWq1VRw5Ik
      kZ6erkgDIBQKYTDEdBmqaiSSLYmikUi2RNMQ8wCCGY1mDuD1erVqWiA4g2YOIOJ/QSIgQiDB
      jKVz0BvbIFgNvF6vKoNggWAqRCIy753o57k9bcjyBFmglqZGTnUNcN26Wt7etgtvxER2Xj5X
      rl2hiiEiBBLEE6c3yAt1rbx1tJfLa/L5vx+tpTw3PboDyLKMJEm4PR6QQTKaMeslfD4fwWCQ
      UCikyKBQKKRYA1A8H6GWhlo6qaShlo4aGl/bUs9HV5Tx/D2XYtSPRv6hUCi6A8yZX8uc+aP/
      v25j2XkGKc3LBoNBVfLMgCo6qWZLomiopaNE470T/RRnm7l5Vfl5fxNZIEFKE47I/PydJr58
      3fwL/l1kgQQpzQt727iutoh8q+mCfxcTYYKUZcQXYktdB3deURX1OSIEEqQsj207yd3rqzEb
      9FGfI0IgQUrSOejlQPsQm5aVTPg8EQIJUpIfvXmMr9+wAEmSJnyeCIEEKcfB9iFkGVZV5F70
      uSIEEqQUsizzo63H+MYNCyb1fBECCVKK1xt6WFaeQ3ne5OrMRAgkSBkCoQiPv9/MP1xTM+nX
      RHWAkN9NS1sXINNy6iTOoQHaOnvVsFMgmBae2tnCLavLyUwzTvo1UQssTja3EYhEwKPD5fZy
      pOUYtfMqVCuGGxkZwWS68OzcVEiUYiu1dJJdw+kNsa9tiF0tAxxqG2TEH+KGxcV8fGUpFbmx
      3fUnY8ugJ8gbDd08f+/aC/bNaBpRHSA300Jz7xDusAH3gJ3qymq8Xh9paWmqFMNlZGSkTLGV
      2jpaawTDEd440oMvFCHPaiIn3UiOxUR2upGcdOO4iaVBd4DdLQPsbnFwuHOYzDQDa6ry+Oiy
      Er5140JC4RA7m4f46Z+aGHAH2LSshM3LSsm2TP5bejLX8/N3j/GPH5pPmim67oU0YtoXyO12
      K94VwuPxiF0hEkxj2BvkyR0tvHu8n8vn5FEzK5Mhb4AhT3D0nzfIkCdAIBQZbScik5NuZE11
      Huuq81lcloVBNz6qPtuWYW+QV+u7ebW+i9x0E59YVcZV8wvPlCfHej1Huob5yZvH+NXfriFa
      2j+ahmYO4HA4yM/PV6QBidPpEsmWqWjIsszB9iGe29NGm8PDnVdU8+HaIuSI8rv8RLbYHG5+
      v7+Ttxt7+eaNi1g/r2DKGgDeQJjPPr6bn922gvLc6F+o0TQ0WxIpskDa4vIFeflAF68c6mTe
      rEw+f1kVS8qyz/z99Jf8tFGZb+UrH57PPRuq+fyv9lCZn87sSaYuz+a7fzzCPRuqJ+z8E6GZ
      AwjiS0SWOd7jYnuTnQ+aHXgCIW5aXsqTd64hw6xdN8hMM/LwLcv46ouHePquNVhM0QvXzuXV
      Q13odBI3Lp243mcixKL4JMETCLHzpIO3G3vpc/mpKrAyO9dCeW766GNe+nkduXPQy/aTdnac
      tNM56GVhSSZXzC3gp7cuJyddeQZOLeYVZXL3+mq++YcG/u3W5Ret3wFoH/Dw5M5WnrlnraK2
      xSBYJY3psKXF7mbb8T7eO9GPPxTh8pp8rlkwi9IcCx2DHjoGvbQPjD52DHoY8YeRJLCa9Az7
      QpRkp7F+bgFXzC2YcnihxXvy4zePkWc1c/f66gk1guEIn3tiDw/dtJgFxZmK7BAOoJKGWjrv
      n+jlz8ftHGofoiIvnWsWzuLK+YXkTvIbW5Zl7C4v+ZkWdJP4Jo2GFu9JOCJz39N13LthDutq
      /pogOVfj4a3HKM+1cPvaSsV2iBAogXi9oZuXD3Tw91fP5dubatHrpt6BJUkiN92kqPNrhV4n
      8city7nzqb38x2dWUZpzfqJke5OdNodn0sVuF0PUAiUIXUNeHn+/mUc+uYxVFbkxdf5UICfd
      xA8+sZSvvHAQf3D87K19xM9P3jrOD25eOqlxwmQQ5dAJQDgi8+BL9fzLx5ZMKQuSqiwqyeL2
      dZV8538OMxagR2SZB16q59ubFk15FnkiRDl0AvDL906xfl7BuDz8TOem5aPlEs/ssgHwxPst
      rJidwyVVeaq2E9UBIkEvp2wdANiaTxIIy4y4RlRr2B0x4Bjxq6aXrBxqH2JP6wD3bJijtSkJ
      xwM3LuTtxl6e2tnK+yft3H/1XNXbiF4NeqqVQChCKGTF5fbStqMOyajnkpW1qlSDDnhCfP+N
      Bv7jM8r2Gk2U6slYdDyBMA+9cphf3LaCSDhMRCVbEkVDDZ0f37KELzyzn0dvW4EcCcc8Qz2p
      atCmg/vo8XmZU72M/CwrRzvs+P0SniE7OYUVuF3DqlWDzs6Awqw0/tLk4NpFyk6L1Lp6Mlad
      7718hC9cPZeyvAzVbUkUDaU6s7INvPB366btesb9JifTzNFeJwvNevJzKthQWgHAmg3XKG78
      XCwWC1+7fj53PrmXy+cWkGacWYO/1xu6Meh1XL+4WGtTZjTjxgDpubMoyklDpbvfRclJN3Hb
      2gr+871T8WkwQRhLeX5n0yKtTZnxjHMAvV6H2+1Bf5H6bDUYywJ9cnU5u1sGaHO4p73NRCAc
      GU3njaY8RS2i1ozr6QHvCHqjAbcvOO0Nj02E6SSJb29axL++1shMOLL7l++dYoNIeSYM4xxA
      Z0zDoDeTm2me9obPngdYXJrN+rkF/NdfUjsU+v3+DuwjAe67cvK7Fgiml/F3AJeTrm4bXX3T
      H46cWwrx2XWVvN3YS7czNSfIwhGZpz+w8Y2N6tSwCNRhnAP0u/3U1CxhYbW6s22TQa+TePDG
      Rfzgtca4tx0P3j3Wx4Z5My/bleiMcwC3241r0I7LPf0ztBcqhVhdmYvFpGd7k33a2483z+1p
      47Y1FVqbITiHcWmIVWsui1vD0apBH9i4kHufrmNNdR4mQ2rU6tkcbkx63QXLewXaknA9LD9j
      9DCzx7c3a22Kajyzq43b14lv/0QkIatBb1tTwbbj/XQNJf+A2BcMs882wBVzo2/7IdCOqA7Q
      12njg7oDEPbwwXvbOHy8mYbGE6o1PNGCGL1O4lsfWcS/vnpUtfa04tX6LjYtK0nKFVozgahT
      kQPDHjLSTeB3kZGXjy+kI+L1qLY3aDgcnlBjSUkGRZlmntvVyq2XnH++69k6SpnOysctde08
      9pmVk36/EuV6EqUadLo1ojpATXUFHX1O3HIG1rRhqoqycQdyVKsGDQQCZGZOvKL//2yu5a6n
      9rKgJIvVldFTs4la+VjfMURVfgb5mVMb/CbK9SRCNeh0a0QNgYxpVqorSrFarcyZN4/MrFyK
      C3IUGzHGZNYEG/U6fvbpFXzv1caknCD7zS4bn71s8jsXCOJPwmWBziXPaub7n1jKl397EF8w
      TmWqKjDkCdAx4GWpqPlJaBIyC3QutaVZfO6yKr75+wZi2MZIE363r4NPTjB2ESQGSbMtyqZl
      JZTlWvjv9xN/fiAiy7zW0M1mBXtWCuJDwodAZ/PVD89nn22Q9473aW3KhGxvsrOmKg+zqPtJ
      eJIiBBpDJ0k88jcrePTPJ2mxJ+4Cmmd327h9nRj8JgNJEwKNkZFm4JG/Wc4/bTmEKw4Ld6ZK
      55CXcESmIoa97gXxJ6lCoDGqCqx8+UPz+OqLh4gk2KD4+d2i6jOZSKoQ6GyunF/I2uo8Ht56
      ImEyQ8FwhB0n7Vy9YJbWpggmSdKFQGdz9/pqDHqJh/54JCHuBG8c7uH6xcUzdmPbZCQpQ6Ax
      JEni69fPpyzHwldfPEgwPM0HW12ELXUdfOpSkftPJqI6QNup47z17vtEwm62/WkrH+w5zI5d
      dao1rObmuPddWcPlcwq4/5n9eDWaLT7aPUxxTjp51unfUECgHtErjGQZSZLweNwgy3g9LqzZ
      WapVgxqNRsUa8Ncqv5tXlpCZZuDuJ3fzi9tWkjWFLbSVVhvKwMOvN/KNG+apUiWrlETRUEtn
      OjVS7oiknafs/NufTvDY7aspnOT2LkqPA/rjoS4aOpx844Z5CXFcU6JoJJIt0TSSNgsUjctr
      CvjO5lru+00d7QOeaWnjbFy+IE9sb+FL182b9rYE6pPUWaBoLCvP4cefXM4/Pn+AE72uaWsH
      4JG3TvCFq2uwanjWriB2kjoLNBFzZ2Xwi9tX8eBL9exqdkxLGw2dTjqHvFxfK3Z4TlZSLgQ6
      m7IcC098/lKe2N7Co+80EY6oN1cQjsh879Wj/PPmWsRy3+QlJUOgs8m1mvivO1ZjNRu488k9
      9Dh9qug+t7uNK+cXTvkAakFikbIh0NlIksTd66v5+saF3P/sPt5p7FWk1+/y8/KBTu4V53ol
      PSkdAp3L0rJsfnP3Wl5r6Oa7fzyCP8YDp37weiNf37ggZXaum8mkfAh0LlazgZ/euoKlZdnc
      8cRumvundvLlzpN2dBKsm5M/TRYK4smM/Qq7eVU5D9+yjAd/38CLdR2TKqYLhCL85K3jfPMj
      4mijVGFGhUDnUl1g5Zm719I55OPmx3by3T8eoa51IKoz/PIvp7hldTkFGaLeJ1VIuVKIWDV0
      ej37bYO83tDN/rYhVszOYdPSElZX5aKTJNocHh54qZ5n71mLLkq5c6JP+8dbI5FsiaYxgWqY
      Hdv+TF75QgLD3QQw4PcEWL9+nSJDEhWdJHFJVR6XVOURkWUOtA3yWn0P33+9kRWzczje6+Lb
      mxdF7fyC5GRCt5KR8Xo86GUZdAby8iyqVYOOjIxgMpkUacD0VQouL8tieVkWsixzqNPFmuFc
      FsyyTnjdiV75GG8NtXRENegEJMotNpFsSRSNRLIl4apBBYJEYEZngQSCmO4rkUgEt1vZxlSS
      JCnWAPD7/ZjNytKSamgkki2JopFItkTTiMkBzGaz4gGsyWTCaJz8ssVoGI1GxbaooZFItqih
      kWqfT7TriSkEGjPmRGM9PXZnTAa1tzTR1aesTt810M/RJuWb5fZ1d6N0dbK9p5P2LmV7lvqG
      Bzne3KZIo8dmw+Nxsa8h9vOWA95h7HY7B/btw+WPLQMjy2Ha2jqI+Jz0DMR+p++x2fD63Bw6
      ejxmDb97EIdzhCMHD+AJjq//inkM0NraSllpOZFwbNsT+iM6hhzKOkxmXgHpJoUb0AbdbH3j
      LYa9AUUyrbZWPArHNQMOO/12O0o2dxmxOzjR00+GgZidOkyEoUEPs4vzCIZiW0MRDgYZcjrZ
      /cE2bB2xn/s8YnfQaLMR9Ppifl8iuiCDHd309/XjGB7/OcecW6qqquJg3W7K59bG9HqzLoIl
      R9lKqsHedlx+hYtcjFZuvuXjZFmU3WKrKqsYCSrLKeQUFFDklxRlJmbNnk2+SaKlwx7zh2ux
      ZJCfM8LJti6WFsyOScNgSqOkeBbLFlXRPxyjIYxeT0Gagc7ugZjfF4slm4ISPejD5GaMD4Ni
      mgcQCFIFsZJ7BuPpb8VtrcLd24SkTyc/Lws55CGkyyA3S9lEZ7Ig7gAzmOGOI+zvhsFThymr
      mU/YKBNxdXHZ+k0z5lxj4QAzmJDfTVhvJegdwjHoJsOsI2wyMys3+pG0qYZwAMGMRtQCCWY0
      wgEEMxrhAIIZzWkH8PPKli1s2bKFg4cOcqpj/Azt9h07LvjibdvenW77BIJpRf/QQw89BAYW
      zJ3F0VYPNYU6evrsvP7WO3T1O1kwt4rd29/h0KEjOAftBCQDh4+1UFlezO+e/RUnO4fQBwbY
      +s57+D0unGELRw/t5N2tWzHnllKYl6X1NQoEUTkvBMrLsuJw2NGlZdPd3nL6WUYqZlkJmHN5
      8Ve/pGLu6FbgJVULyDFEqG86RWWhlRMnW6g/uI+Wjl5MmYXU1ojjggSJzV/ToJEAfQMe8jKN
      9Hec4vU9rXziIx8iL9vKQH8PdqeXoiwjr2zbxx23fgyA3t5e9JKOzKx0Wjv6mDennJNNrWTm
      ZKFDoqhInJYoSGzEPIBgRqOoFkiNFV1er1ezbRIFggkdYNeObVjzyinIMGDrHSLsGyEvO4MB
      d4gr1l0CoHh3CEmSFO8OMVN2MJipGtNpy8SKMgS8HpxyGLMlk7R0E3LIf2Y9bygUUrw/kBoa
      M2UPm5mqoZbOhTQmdIB166+eUNDtdiv2ymAwqMo3hBoaaukIDfU11NI5V0PzmWAR/wsuxvEe
      F//5lxamI12juQMIBBdjx0k7fzray0/eOqa6E2juAGKDLMHFaOh08rNPryAUlvnxm+o6geYO
      IEIgwcVoH/BQlp3GgzcuJBwZcwJ1vEBzBxAIJsLtD2Ex6ZGk0ZT5X53guCpOoLkDiBBIMBFH
      u4ZZXJp95uczTiCr4wSaO4AIgQQT0dDpZGlZ9rjfSZLEgxsXElHBCTR3AIFgIi7kADDqBA+o
      4ASaO4AIgQQT0T7gYXbehaOEs53g+6814gtOfbZY842xRAgkiIbbHyLdpEeaYI+iMSd4YnsL
      9z5dhz8UwWLUU11gZU6hlTmFGdQUWCnOTrvg6zV3AIEgGke7hqktPT/8ORdJkrhnwxzu2TAH
      AE8gRIvdTXO/m32tA2ypa6fH6SMiy+jPOeRQcwfwer2qnBUmSD2ixf8XI91kYHFp9rjsEVy4
      GlTzMYAIgQTRaOh0srR86g4wFTR3AIEgGu0DHmbnTu8XpOYOILJAggsxmQGwGmjuACIEElyI
      yQ6AlRJ1ECwHhtm+cz+1a6/E0XqYYZcPr6wnP13HrNlzKcjJnHbjBDOXWAfAUyWqA4Q9Q+Tm
      5zMw7CcrK5uhkRC51jR0epmenl4sRp0qyxldLpfiEwATfdmd0Jg69R2DfOnauWf6V9yXRBpy
      yknrD1CUEaGvw01lZTkjngBZaRJpWQVY082qLInMzMxM+WV3QmPqGh2DPqoKM8eNAabDlgkU
      dcydNxeAzAWjB+EVKW5eILg48RoAQwIMgkUWSHAuR84pgZ5ONHcAkQUSnMvhTidL4jAAhgRw
      AIHgXOIxAzyG5g4gQiDBucRjBngMzR1AhECCs4nnABgSwAEEgrOJ5wAYEsABRAgkOJt4xv+Q
      AA4gQiDB2cQzAwQJ4AACwdnEcwAMCeAAIgQSjOH2h0g3x28ADAmwJPLsECgUjtA15KNtwINt
      wE2bw4PN4cHpC5KVZiTLYhh9TDOQZTGe/p2RDJOOS6vzMeg192eBAo50DbO4JH7hDySAA/xm
      dwfbmwfxhyLodRJl2RZm56dTkZfO9YuLqchLJ9dqZMQXYtgbxHn60eULMuwN0epw0zHg4eld
      bTx620qMwgmSlngPgCEBHGDjojw+v76GNKN+wuflpJvISb9w2XQoFOKV+h6++NwBfn7bSkwG
      4QTJyOFOJ9fXxrfkclxP6evrY8/7b2LrHo6bAYVZ6Rft/JPh5lXlbFxSzBef208gFFHBMkG8
      aR/wUB7HATCc4wCD3acYCWeRk2WOqxFq8YmVZWxaVsL9z+7HH5raAopAKELPsE84j0aMDoAN
      cR0AwzkhUGZuMWvml5NhMULYz/59h1i4ag1dp44g6UwM+ULkWyQMGfmUFxeqYoDa+wJ9bEUZ
      Okni/mf389hnVmG+yN0lFJH5w/4Onv7AxqxMM4Fw5DwnMBt0ZFmM5GeY+c7mRRh0IsRSm9EZ
      4Ky4tzvOAXIyrJxoOkxp+QJy6cWak0273c3s0jJ27DtMRVE+I0EJ/YAdd2a6KksiTSaT6qdE
      3rh4FnIkwt8/s4+ff3r5BUOsiCzzWkMPT+9q49r5BTx79yWY9RJ6/fnP9QXDuHwhfvTmCQ53
      DLFkgg8q2ZciaqVxqH2Q2uKMqH0hLksi3V43HbYOMGQzq7YKvaOZokzo7eph6cK5uH0hck0y
      pqwCrFaLKksiA4EAmZnKF9ifa8dNK8tZXJ7DHb+q498/vYLK/NHzjHuHfTz27klO9bv54rVz
      +cP9V5x5TbSzaDMMBjIsZm5aWcb7Jx2sqMibki1qXE+qa+xpHeThW5ZN+NxpXxLpC+m5YeNG
      9HoDIP11SeS8hYobjsZ0lkLUFGbwyK3L+dJvD/KdzbVsPdxNQ+cw919dw0M3FTLVcHNVRS5P
      72ydFltnOoPuAHlWZZsjxMK4YLa99RRNTU2MeANxN2S6mFOYwb9/agX/f9tJ1s3J5/l713Ll
      /Kl3foBsixGXL0RkOs7rnMHYXX4KMrRJvIy7A1x+1TVxNyAem+NWFVh5/POXqqI1ryiTpt4R
      FhSLfZHUoqHTyZI4T4CNoXk6I9mqQS+pzKXONqC1GSlFvDbBuhCaO0Cysboyl322Qa3NSCm0
      dADNSyGS7XyAyvx0bA6P1mYoRpZlBtwBMtOMcS0d8QRCHOtx0dg1zNHuYU71j2Ax6jUZAEMC
      OECyhUCSJFGQYaLf5acwMzlmzGV5NP1b3zFEfYeThk4nI6fX3sLoLLgkceYEdkmCNKOedKMe
      a5oBi1E/+s90/qPpdPFhRAYZGVkeda7RnyEYCtEzHKCxe5gepw+LSc/C4kxqS7P43GWV1BRm
      aFrFq7kDJCOrK/PYZxtk45JirU2JytHuYbadcFDf4WTQE6A4K41l5dlcMTefv7tqDplpxqiv
      lWUZXzCC0+PDHwZvMIw3EMYbDOM7/egNhhl0B/CHIkiShE4CidEvCEkC3elHORJhUUkWt6wq
      pyjLHPdSh4uhuQMkWwgEo+OArYe7E9YB2gY8/PMrR/nKdfO5Y10luVMMLyRJwmLSY9SZFU8+
      RZtcTBQ0HwQnWwgEsLQsm4bO+FXMToVQOMKDL9Xzg48v5qoFs6bc+WcamjtAMmIy6NBJxHQu
      7XTz6DtNbFxSzPwiMU8xGTR3gGRdE7y0PJuGDqfWZoxjT8sAx3pc3LGuUmtTkgbNHSAZQyAY
      mxBLnPkApzfID19v5Ic3L024gWYio7kDJCurKnLZnyAOIMvw7Zcb+Or188nXqKYmWdHcAZI1
      BMrPMDPgCSAnQGHc7/a1U5SVxoZ56ixSmklo7gDJGgIBzCmw0mx3a2pDq93NlroOvnHD9JWs
      pzKTOiXS3niItJICHPYR0vCJUyJPM1YXVFOYoUn7wXCEB35fzw9vXip2woiRSZ0SaTWnEYrI
      dHd3M7eiSJwSeZoV5Vk8saOVm1eUqGrLZDV+8uYJblpaQmVe2nmfQ7ItiYyHTsynRJoyKpBM
      evSSmTRdSJwSeZr5Jdk02z3nL7OLw/XsPGWnfdDLgx9ZFDXrkyjvayKf4DmpUyLHmF2aptiA
      VEInSeRYjAy6A3GdcbW7/Pxo63GevPNSkfJUiOaBY7JmgcZYVZnL/rb4pUOPdg1z72/qeOij
      teRG2SlPMHk0d4BkzgJBfCfE/udgJ//y6lEeu30VKypy49JmqpO4ZXpJwrLZOfzsnaZpbSMU
      jvDDN44x4g/x67suxWxQvpWkYBTN7wDJHgJZjHrCEZlgeHq2VHSM+Lnr13uZU2jl/928THR+
      ldHcAZI9BAJYUpbN4U71C+PqO4a459d1fPlD87l9bWVMW7kIJkaEQCowNiG2UsW4fEtdOy8f
      7OSXd6xmVpbIvk0Xmt8Bkj0EglEHUGsgbB/x860/HKa+w8lTd64RnX+a0fwOkAohUFFWGn3D
      fkWFcS12N4+/30yL3c3fXlbJ9UtKLv4igWI0d4BUoSLPQvuAh9LsqZUj728b5L//0kxEhns3
      VLO6Mo9wWFl5iWDyaO4Aybgo/kKsrsyjzjbITcsuvlA+Isv8ubGPp3a2Up5r4WvXL6BmljYF
      dTMdzR0gFUIggNVVuTy7yzahA4TCEf5woJPf7m1n3Zw8fvqp5czKFDG+lmjuAKnCgqJMjve6
      Lvi3YDjCS/s6eGFvOzcsKebpu9ZgNYu3PhHQ/FNIlRBIr5Owmgy4fEFyM0bf1kAowpZ97Wyp
      62DTshKevXct6SbN33LBWWj+aaRKCASwqiKHA21DXDHfxIt7O3hpfwc3LS/l+fvWYVHhJEyB
      +mjuAKnE6so8Hn3nBI++28zHV5bx2/vWqXIErGD6iO4AZ50S6emxIVsysA8OY8Gf0KdEaskl
      Vbl8cnU5H1tZJmp2koSoDhB0dp05JTJ9yI4rqKOj1UZpWUnCnxKplY5Bgo8tK0KPrOiaEmUp
      YqJoqKUzpSWRxpxSRk7WU1UEaaUVWGQdVFViwY8poxCr1arKkki9Xp/yy+6ERuJ+NtEVdWZW
      rxk7V8uKFSjIz1dswLmkUggkSD4UuVQwGMTtVrYvjiRJijX8fj9ms/Id0dTQERrqa0ynLYoc
      ID09XfGWJkajUbGGyWTCaIx+4EM8bREa40n0z0ZRObTJZCIS9LB/3348wRhWRMkhGg8dxOVX
      tprK1nyCrj6FJzfKIbq7+xRJeIcHaTzZokjDNzzI8eY2RRo9Nhsej4t9DY0xa46FMLEAAACr
      SURBVNg7bAw6nRw8cixmjYB3GPugiw6bjVhTAnIkRFtbJ93trXT3x15ybrPZcDr6aGnvGvd7
      ZesBQn7aepyUFmYRiqUPu/swZefQ3q1sNVVpaZniLEHDvj0cVdjxmm02gl4fStx5wGGn325X
      pDFid3Cip58MAzF3PO+QHV1WwZlzxGIhTIShnk62vvEWwzEevh4KBnE6nbS22RSsHYngsA9i
      dzhwOBzj/vK/lKjAlx5BF6gAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='pay type (time)' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
